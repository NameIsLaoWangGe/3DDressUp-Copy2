{
  "code": "import PromoItem from \"./PromoItem\";\r\nimport Behaviour from \"./Behaviour\";\r\nimport { GO } from \"../../GO\";\r\nexport default class P405 extends Behaviour {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.scroll = null;\r\n        this.layout = null;\r\n        this.paddingTop = 10;\r\n        this.paddingBottom = 10;\r\n        this.move = null;\r\n        this.show = null;\r\n        this.hide = null;\r\n        this.maxX = 560;\r\n        this.mouseDown = false;\r\n        this.lastStageX = 0;\r\n        this.lastStageY = 0;\r\n        this.targetX = 0;\r\n        this.showing = [];\r\n    }\r\n    async OnAwake() {\r\n        this.shield = TJ.Develop.Yun.Location.shield;\r\n        this.move = this.owner.getChildByName(\"move\");\r\n        let button = this.move.getChildByName(\"button\");\r\n        this.show = button.getChildByName(\"show\");\r\n        this.hide = button.getChildByName(\"hide\");\r\n        let board = this.move.getChildByName(\"board\");\r\n        this.scroll = board.getChildByName(\"scroll\");\r\n        this.layout = this.scroll.getChildByName(\"layout\");\r\n        TJ.Develop.Yun.Promo.Data.ReportAwake(P405.style);\r\n        this.show.clickHandler = new Laya.Handler(null, () => { this.Show(); });\r\n        this.hide.clickHandler = new Laya.Handler(null, () => { this.Hide(); });\r\n        this.layoutS = this.layout.addComponent(P405Layout);\r\n        if (this.show.parent.scaleX < 0)\r\n            this.maxX = -this.maxX;\r\n        if (TJ.API.AppInfo.Channel() == TJ.Define.Channel.AppRt.ZJTD_AppRt) {\r\n            return;\r\n        }\r\n        this.active = false;\r\n        let list = await TJ.Develop.Yun.Promo.List.Get();\r\n        if (list.count > 0) {\r\n            if (this.layoutS != null) {\r\n                if (this.shield) {\r\n                    for (let i = 0; i < Math.min(list.count, 5); i++) {\r\n                        this.layoutS.datas.push(list.Load());\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 0; i < list.count; i++) {\r\n                        this.layoutS.datas.push(list.Load());\r\n                    }\r\n                }\r\n                this.layoutS.Init(this.scroll.width, this.scroll.height, this.shield);\r\n                this.active = true;\r\n                TJ.Develop.Yun.Promo.Data.ReportStart(P405.style);\r\n            }\r\n            else {\r\n            }\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    OnStart() {\r\n        if (this.shield)\r\n            return;\r\n        this.scroll.on(Laya.Event.MOUSE_DOWN, null, (event) => {\r\n            this.mouseDown = true;\r\n            this.lastStageX = event.stageX;\r\n            this.lastStageY = event.stageY;\r\n        });\r\n        this.scroll.on(Laya.Event.MOUSE_OUT, null, (event) => {\r\n            this.mouseDown = false;\r\n        });\r\n        this.scroll.on(Laya.Event.MOUSE_UP, null, (event) => {\r\n            this.mouseDown = false;\r\n        });\r\n        this.scroll.on(Laya.Event.MOUSE_MOVE, null, (event) => {\r\n            if (this.mouseDown) {\r\n                let dx = event.stageX - this.lastStageX;\r\n                let dy = event.stageY - this.lastStageY;\r\n                this.lastStageX = event.stageX;\r\n                this.lastStageY = event.stageY;\r\n                let ty = this.layoutS.node.y + dy;\r\n                this.layoutS.node.y = ty;\r\n            }\r\n        });\r\n    }\r\n    Show() {\r\n        if (TJ.API.AppInfo.Channel() == TJ.Define.Channel.AppRt.ZJTD_AppRt) {\r\n            let param = new TJ.API.Promo.Param();\r\n            param.extraData = { \"TJ_App\": TJ.API.AppInfo.AppGuid() };\r\n            TJ.API.Promo.Pop(param);\r\n            return;\r\n        }\r\n        this.targetX = this.maxX;\r\n        this.show.active = this.show.visible = false;\r\n        this.hide.active = this.hide.visible = true;\r\n        this.layout.y = 0;\r\n    }\r\n    Hide() {\r\n        this.targetX = 0;\r\n        this.showing = [];\r\n    }\r\n    OnUpdate() {\r\n        let deltaTime = Laya.timer.delta / 1000;\r\n        if (this.move.centerX != this.targetX) {\r\n            let d = this.targetX - this.move.centerX;\r\n            let s = 3000 * deltaTime;\r\n            if (d > 0) {\r\n                d = Math.min(this.move.centerX + s, this.targetX);\r\n            }\r\n            else {\r\n                d = Math.max(this.move.centerX - s, this.targetX);\r\n            }\r\n            this.move.centerX = d;\r\n            if (this.move.centerX == 0) {\r\n                this.show.active = this.show.visible = true;\r\n                this.hide.active = this.hide.visible = false;\r\n                if (this.shield) {\r\n                    window.setTimeout(async () => {\r\n                        let list = await TJ.Develop.Yun.Promo.List.Get();\r\n                        if (list != null && list.count > 0) {\r\n                            this.layoutS.datas = [];\r\n                            for (let i = 0; i < Math.min(list.count, 5); i++) {\r\n                                this.layoutS.datas.push(list.Load());\r\n                            }\r\n                            this.layoutS.Redata();\r\n                        }\r\n                    }, 0);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.shield)\r\n                return;\r\n            if (this.move.centerX == this.maxX) {\r\n                this.layout.y -= 0.8;\r\n            }\r\n        }\r\n        if (this.shield)\r\n            return;\r\n        this.layoutS.Repos(this.layout.y);\r\n    }\r\n}\r\nP405.style = \"P405\";\r\nclass P405Layout extends Behaviour {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.datas = [];\r\n        this.items = [];\r\n        this.prefab = null;\r\n        this.line = 0;\r\n        this.column = 0;\r\n        this.spacingX = 12;\r\n        this.spacingY = 12;\r\n    }\r\n    get node() {\r\n        return this.owner;\r\n    }\r\n    OnAwake() {\r\n        this.prefab = this.node.getChildAt(0);\r\n        this.prefab.active = this.prefab.visible = false;\r\n    }\r\n    Init(width, height, shield) {\r\n        while (width >= this.prefab.width) {\r\n            width = width - this.prefab.width - this.spacingX;\r\n            this.column++;\r\n        }\r\n        while (height >= this.prefab.height) {\r\n            height = height - this.prefab.height - this.spacingY;\r\n            this.line++;\r\n        }\r\n        if (shield) {\r\n            let uw = this.prefab.width;\r\n            let uh = this.prefab.height;\r\n            let spaceX = uw + this.spacingX;\r\n            let spaceY = uh + this.spacingY;\r\n            for (let y = 0; y < this.line; y++) {\r\n                for (let x = 0; x < this.column; x++) {\r\n                    if (this.items.length < this.datas.length) {\r\n                        let item = GO.Instantiate(this.prefab).getComponent(PromoItem);\r\n                        this.node.addChild(item.owner);\r\n                        item.owner.active = item.owner.visible = true;\r\n                        this.items.push(item);\r\n                        item.owner.x = x * spaceX + uw / 2;\r\n                        item.owner.y = spaceY * y + uh / 2;\r\n                        item.onAwake();\r\n                    }\r\n                }\r\n            }\r\n            this.Redata();\r\n        }\r\n        else {\r\n            this.line += 2;\r\n            for (let y = 0; y < this.line; y++) {\r\n                for (let x = 0; x < this.column; x++) {\r\n                    let item = GO.Instantiate(this.prefab).getComponent(PromoItem);\r\n                    this.node.addChild(item.owner);\r\n                    item.owner.active = item.owner.visible = true;\r\n                    this.items.push(item);\r\n                    item.onAwake();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Redata() {\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            let item = this.items[i];\r\n            item.data = this.datas[i];\r\n            item.data.Load();\r\n            item.DoLoad();\r\n        }\r\n    }\r\n    Repos(posY) {\r\n        let ic = this.items.length;\r\n        let dc = this.datas.length;\r\n        if (ic < 1)\r\n            return;\r\n        if (dc < 1)\r\n            return;\r\n        let uw = this.prefab.width;\r\n        let uh = this.prefab.height;\r\n        let spaceX = uw + this.spacingX;\r\n        let spaceY = uh + this.spacingY;\r\n        let k = -posY / spaceY;\r\n        k = Math.floor(k);\r\n        let k1 = Math.floor(k / this.line) * this.line, k2 = k < 0 ? (this.line + k % this.line) % this.line : (k % this.line);\r\n        let checkPos = (item, b, l, c) => {\r\n            let pid = b + l * this.column + c;\r\n            if (item.posId != pid) {\r\n                item.posId = pid;\r\n                item.owner.x = spaceX * c + uw / 2;\r\n                item.owner.y = (b + l) * spaceY + uh / 2;\r\n                let did = pid < 0 ? (dc + pid % dc) % dc : (pid % dc);\r\n                if (item.dataId != did) {\r\n                    item.dataId = did;\r\n                    item.data = this.datas[did];\r\n                    item.data.Load();\r\n                    item.DoLoad();\r\n                }\r\n            }\r\n        };\r\n        for (let l = 0; l < k2; l++) {\r\n            for (let c = 0; c < this.column; c++) {\r\n                checkPos(this.items[l * this.column + c], k1 + this.line, l, c);\r\n            }\r\n        }\r\n        for (let l = k2; l < this.line; l++) {\r\n            for (let c = 0; c < this.column; c++) {\r\n                checkPos(this.items[l * this.column + c], k1, l, c);\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "references": [
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/src/TJ/Promo/script/PromoItem.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/src/TJ/Promo/script/Behaviour.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/src/TJ/GO.ts"
  ]
}
