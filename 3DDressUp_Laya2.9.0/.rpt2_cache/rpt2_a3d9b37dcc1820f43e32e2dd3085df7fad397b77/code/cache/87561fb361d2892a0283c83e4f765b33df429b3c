{
  "code": "export default class test extends Laya.Script {\r\n    onAwake() {\r\n        let pay1 = this.owner.getChildByName(\"pay1\");\r\n        let pay2 = this.owner.getChildByName(\"pay2\");\r\n        let pay3 = this.owner.getChildByName(\"pay3\");\r\n        let restore = this.owner.getChildByName(\"restore\");\r\n        let review = this.owner.getChildByName(\"review\");\r\n        let banner = this.owner.getChildByName(\"banner\");\r\n        let normal = this.owner.getChildByName(\"normal\");\r\n        let reward = this.owner.getChildByName(\"reward\");\r\n        let vibrateShort = this.owner.getChildByName(\"vibrateShort\");\r\n        let vibrateLong = this.owner.getChildByName(\"vibrateLong\");\r\n        let userAgreement = this.owner.getChildByName(\"userAgreement\");\r\n        let privacyPolicy = this.owner.getChildByName(\"privacyPolicy\");\r\n        pay1.clickHandler = new Laya.Handler(null, () => { this.Pay1(); });\r\n        pay2.clickHandler = new Laya.Handler(null, () => { this.Pay2(); });\r\n        pay3.clickHandler = new Laya.Handler(null, () => { this.Pay3(); });\r\n        restore.clickHandler = new Laya.Handler(null, () => { this.Restore(); });\r\n        review.clickHandler = new Laya.Handler(null, () => { this.Review(); });\r\n        banner.clickHandler = new Laya.Handler(null, () => { this.Banner(); });\r\n        normal.clickHandler = new Laya.Handler(null, () => { this.Normal(); });\r\n        reward.clickHandler = new Laya.Handler(null, () => { this.Reward(); });\r\n        vibrateShort.clickHandler = new Laya.Handler(null, () => { this.VibrateShort(); });\r\n        vibrateLong.clickHandler = new Laya.Handler(null, () => { this.VibrateLong(); });\r\n        userAgreement.clickHandler = new Laya.Handler(null, () => { this.UserAgreement(); });\r\n        privacyPolicy.clickHandler = new Laya.Handler(null, () => { this.PrivacyPolicy(); });\r\n    }\r\n    onStart() {\r\n        if (window[\"conch\"] != null) {\r\n            window[\"conch\"].setOnBackPressedFunction(() => {\r\n                TJ.API.AppCtl.Quit();\r\n            });\r\n        }\r\n        console.log(TJ.API.AppInfo.ProductName());\r\n        console.log(TJ.API.AppInfo.PackageName());\r\n        console.log(TJ.API.AppInfo.VersionName());\r\n        console.log(TJ.API.AppInfo.VersionCode());\r\n        console.log(TJ.API.AppInfo.Channel());\r\n        console.log(TJ.API.Billing.Exist());\r\n        console.log(TJ.API.AdService.Exist());\r\n        switch (TJ.Engine.RuntimeInfo.platform) {\r\n            case TJ.Define.Platform.Android:\r\n                break;\r\n            case TJ.Define.Platform.iOS:\r\n                break;\r\n            case TJ.Define.Platform.AppRt:\r\n                break;\r\n        }\r\n        switch (TJ.API.AppInfo.Channel()) {\r\n            case TJ.Define.Channel.Android.oppo:\r\n                break;\r\n            case TJ.Define.Channel.AppRt.ZJTD_AppRt:\r\n                break;\r\n        }\r\n        this.Event();\r\n    }\r\n    Event() {\r\n        let p = new TJ.API.Analytics.Param();\r\n        p.id = \"eventName\";\r\n        p.dic[\"extraParam1\"] = 1;\r\n        p.dic[\"extraParam2\"] = \"2\";\r\n        TJ.API.Analytics.Event(p);\r\n    }\r\n    Pay1() {\r\n        let p = new TJ.API.Billing.Param();\r\n        p.product.price = .01;\r\n        p.product.name = \"测试计费点1分\";\r\n        p.product.description = \"这是一个一分钱的测试计费点\";\r\n        p.cbi.Add(TJ.Define.Event.Reward, () => {\r\n            console.log(\"支付成功\");\r\n        });\r\n        p.cbi.Add(TJ.Define.Event.NoReward, () => {\r\n            console.log(\"支付失败\");\r\n        });\r\n        TJ.API.Billing.Purchase(p);\r\n    }\r\n    Pay2() {\r\n        let p = new TJ.API.Billing.Param();\r\n        p.product.price = .1;\r\n        p.product.name = \"测试计费点1角\";\r\n        p.product.description = \"这是一个一角钱的测试计费点\";\r\n        p.cbi.Add(TJ.Define.Event.Reward, () => {\r\n            console.log(\"支付成功\");\r\n        });\r\n        p.cbi.Add(TJ.Define.Event.NoReward, () => {\r\n            console.log(\"支付失败\");\r\n        });\r\n        TJ.API.Billing.Purchase(p);\r\n    }\r\n    Pay3() {\r\n        let p = new TJ.API.Billing.Param();\r\n        p.product.price = 1.;\r\n        p.product.name = \"测试计费点1元\";\r\n        p.product.description = \"这是一个一元钱的测试计费点\";\r\n        p.cbi.Add(TJ.Define.Event.Reward, () => {\r\n            console.log(\"支付成功\");\r\n        });\r\n        p.cbi.Add(TJ.Define.Event.NoReward, () => {\r\n            console.log(\"支付失败\");\r\n        });\r\n        TJ.API.Billing.Purchase(p);\r\n    }\r\n    Restore() {\r\n        let param = new TJ.API.Billing.Param();\r\n        param.cbi.Add(TJ.Define.Event.Complete, (list) => {\r\n            for (let item of list) {\r\n                console.log(\"restore = \" + item.product.name + \" = \" + item.product.id);\r\n                TJ.API.Billing.Consume(item);\r\n            }\r\n        });\r\n        TJ.API.Billing.QueryAll(param);\r\n    }\r\n    Review() {\r\n        TJ.API.AppCtl.Review();\r\n    }\r\n    VibrateShort() {\r\n        TJ.API.Vibrate.Short();\r\n    }\r\n    VibrateLong() {\r\n        TJ.API.Vibrate.Long();\r\n    }\r\n    Vibrate() {\r\n        TJ.API.Vibrate.Time(0.1);\r\n    }\r\n    UserAgreement() {\r\n        TJ.API.AppCtl.UserAgreement();\r\n    }\r\n    PrivacyPolicy() {\r\n        TJ.API.AppCtl.PrivacyPolicy();\r\n    }\r\n    AppCtl() {\r\n        TJ.API.AppCtl.Quit();\r\n    }\r\n    Banner() {\r\n        let p = new TJ.API.AdService.Param();\r\n        p.place = TJ.API.AdService.Place.BOTTOM | TJ.API.AdService.Place.CENTER;\r\n        TJ.API.AdService.ShowBanner(p);\r\n    }\r\n    Normal() {\r\n        let p = new TJ.API.AdService.Param();\r\n        TJ.API.AdService.ShowNormal(p);\r\n    }\r\n    Reward() {\r\n        let p = new TJ.API.AdService.Param();\r\n        p.extraAd = true;\r\n        p.cbi.Add(TJ.Define.Event.Reward, () => {\r\n            console.log(\"发放奖励\");\r\n        });\r\n        p.cbi.Add(TJ.Define.Event.NoAds, () => {\r\n            console.log(\"没有广告\");\r\n        });\r\n        TJ.API.AdService.ShowReward(p);\r\n    }\r\n    Native() {\r\n        let nad = TJ.API.AdService.LoadNative(new TJ.API.AdService.Param());\r\n        if (nad != null) {\r\n            nad.title;\r\n            nad.desc;\r\n            nad.iconUrl;\r\n            nad.imgUrl;\r\n            nad.logoUrl;\r\n            nad.OnShow();\r\n            nad.OnClick();\r\n        }\r\n    }\r\n}\r\n",
  "references": []
}
