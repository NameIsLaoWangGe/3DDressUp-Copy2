{
  "code": "export var GO;\r\n(function (GO) {\r\n    function Instantiate(node) {\r\n        let comp = Node2Comp(node);\r\n        let gobj = Laya.SceneUtils.createComp(comp);\r\n        return gobj;\r\n    }\r\n    GO.Instantiate = Instantiate;\r\n    function Node2Comp(node) {\r\n        let comp = {};\r\n        comp.type = node.constructor.name;\r\n        comp.props = {};\r\n        if (node.name != null)\r\n            comp.props.name = node.name;\r\n        if (node instanceof Laya.Sprite)\r\n            Props_Sprite(node, comp.props);\r\n        if (node instanceof Laya.Scene)\r\n            Props_Scene(node, comp.props);\r\n        if (node instanceof Laya.UIComponent)\r\n            Props_UIComponent(node, comp.props);\r\n        if (node instanceof Laya.Text) {\r\n            if (node.parent instanceof Laya.Label && node.parent.textField == node) {\r\n                return null;\r\n            }\r\n            Props_Text(node, comp.props);\r\n        }\r\n        if (node instanceof Laya.Dialog)\r\n            Props_Dialog(node, comp.props);\r\n        if (node instanceof Laya.Clip)\r\n            Props_Clip(node, comp.props);\r\n        if (node instanceof Laya.FontClip)\r\n            Props_FontClip(node, comp.props);\r\n        if (node instanceof Laya.Image)\r\n            Props_Image(node, comp.props);\r\n        if (node instanceof Laya.Button)\r\n            Props_Button(node, comp.props);\r\n        if (node instanceof Laya.ComboBox)\r\n            Props_ComboBox(node, comp.props);\r\n        if (node instanceof Laya.Slider)\r\n            Props_Slider(node, comp.props);\r\n        if (node instanceof Laya.ScrollBar)\r\n            Props_ScrollBar(node, comp.props);\r\n        if (node instanceof Laya.ProgressBar)\r\n            Props_ProgressBar(node, comp.props);\r\n        if (node instanceof Laya.Label)\r\n            Props_Label(node, comp.props);\r\n        if (node instanceof Laya.TextInput)\r\n            Props_TextInput(node, comp.props);\r\n        if (node instanceof Laya.TextArea)\r\n            Props_TextArea(node, comp.props);\r\n        if (node instanceof Laya.ColorPicker)\r\n            Props_ColorPicker(node, comp.props);\r\n        if (node instanceof Laya.Box)\r\n            Props_Box(node, comp.props);\r\n        if (node instanceof Laya.LayoutBox)\r\n            Props_LayoutBox(node, comp.props);\r\n        if (node instanceof Laya.Panel)\r\n            Props_Panel(node, comp.props);\r\n        if (node instanceof Laya.List)\r\n            Props_List(node, comp.props);\r\n        if (node instanceof Laya.Tree)\r\n            Props_Tree(node, comp.props);\r\n        if (node instanceof Laya.ViewStack)\r\n            Props_ViewStack(node, comp.props);\r\n        if (node instanceof Laya.UIGroup)\r\n            Props_UIGroup(node, comp.props);\r\n        if (node instanceof Laya.Tab)\r\n            Props_Tab(node, comp.props);\r\n        comp.child = [];\r\n        for (let i = 0; i < node.numChildren; i++) {\r\n            let cc = Node2Comp(node.getChildAt(i));\r\n            if (cc != null) {\r\n                comp.child.push(cc);\r\n            }\r\n        }\r\n        if (node instanceof Laya.Sprite)\r\n            Child_Mask(node, comp.child);\r\n        Child_Script(node, comp.child);\r\n        return comp;\r\n    }\r\n    function Child_Script(node, child) {\r\n        let cs = node.getComponents(Laya.Script);\r\n        if (cs != null) {\r\n            for (let c of cs) {\r\n                child.push({ type: \"Script\", props: { runtime: c.runtime } });\r\n            }\r\n        }\r\n    }\r\n    function Child_Mask(node, child) {\r\n        if (node.mask != null) {\r\n            child.push(Node2Comp(node.mask));\r\n        }\r\n    }\r\n    function Props_Sprite(node, props) {\r\n        if (!isNaN(node.x))\r\n            props.x = node.x;\r\n        if (!isNaN(node.y))\r\n            props.y = node.y;\r\n        if (!isNaN(node.width))\r\n            props.width = node.width;\r\n        if (!isNaN(node.height))\r\n            props.height = node.height;\r\n        if (node.visible != null)\r\n            props.visible = node.visible;\r\n        if (node.texture != null)\r\n            props.texture = node.texture.url;\r\n        if (node[\"renderType\"] != null)\r\n            props.renderType = node[\"renderType\"];\r\n    }\r\n    function Props_Scene(node, props) {\r\n        if (node.autoDestroyAtClosed != null)\r\n            props.autoDestroyAtClosed = node.autoDestroyAtClosed;\r\n    }\r\n    function Props_UIComponent(node, props) {\r\n        if (!isNaN(node.anchorX))\r\n            props.anchorX = node.anchorX;\r\n        if (!isNaN(node.anchorY))\r\n            props.anchorY = node.anchorY;\r\n        if (!isNaN(node.centerX))\r\n            props.centerX = node.centerX;\r\n        if (!isNaN(node.centerY))\r\n            props.centerY = node.centerY;\r\n        if (!isNaN(node.top))\r\n            props.top = node.top;\r\n        if (!isNaN(node.bottom))\r\n            props.bottom = node.bottom;\r\n        if (!isNaN(node.left))\r\n            props.left = node.left;\r\n        if (!isNaN(node.right))\r\n            props.right = node.right;\r\n    }\r\n    function Props_Text(node, props) {\r\n        if (node.text != null)\r\n            props.text = node.text;\r\n        if (node[\"runtime\"] != null)\r\n            props.runtime = node[\"runtime\"];\r\n    }\r\n    function Props_Dialog(node, props) {\r\n        if (node.group != null)\r\n            props.group = node.group;\r\n        if (node.dragArea != null)\r\n            props.dragArea = node.dragArea;\r\n        if (node.isShowEffect != null)\r\n            props.isShowEffect = node.isShowEffect;\r\n        if (node.isPopupCenter != null)\r\n            props.isPopupCenter = node.isPopupCenter;\r\n        if (node.isModal != null)\r\n            props.isModal = node.isModal;\r\n    }\r\n    function Props_Clip(node, props) {\r\n        if (node.skin != null)\r\n            props.skin = node.skin;\r\n        if (node.group != null)\r\n            props.group = node.group;\r\n        if (node.sizeGrid != null)\r\n            props.sizeGrid = node.sizeGrid;\r\n        if (node.autoPlay != null)\r\n            props.autoPlay = node.autoPlay;\r\n        if (!isNaN(node.index))\r\n            props.index = node.index;\r\n        if (!isNaN(node.clipX))\r\n            props.clipX = node.clipX;\r\n        if (!isNaN(node.clipY))\r\n            props.clipY = node.clipY;\r\n        if (!isNaN(node.clipWidth))\r\n            props.clipWidth = node.clipWidth;\r\n        if (!isNaN(node.clipHeight))\r\n            props.clipHeight = node.clipHeight;\r\n    }\r\n    function Props_FontClip(node, props) {\r\n        if (node.value != null)\r\n            props.value = node.value;\r\n        if (node.sheet != null)\r\n            props.sheet = node.sheet;\r\n        if (node.align != null)\r\n            props.align = node.align;\r\n        if (node.direction != null)\r\n            props.direction = node.direction;\r\n        if (!isNaN(node.spaceX))\r\n            props.spaceX = node.spaceX;\r\n        if (!isNaN(node.spaceY))\r\n            props.spaceY = node.spaceY;\r\n    }\r\n    function Props_Image(node, props) {\r\n        if (node.skin != null)\r\n            props.skin = node.skin;\r\n        if (node.group != null)\r\n            props.group = node.group;\r\n        if (node.sizeGrid != null)\r\n            props.sizeGrid = node.sizeGrid;\r\n    }\r\n    function Props_Button(node, props) {\r\n        if (node.skin != null)\r\n            props.skin = node.skin;\r\n        if (node.label != null)\r\n            props.label = node.label;\r\n        if (node.toggle != null)\r\n            props.toggle = node.toggle;\r\n        if (node.sizeGrid != null)\r\n            props.sizeGrid = node.sizeGrid;\r\n        if (node.selected != null)\r\n            props.selected = node.selected;\r\n        if (node.strokeColors != null)\r\n            props.strokeColors = node.strokeColors;\r\n        if (node.labelStrokeColor != null)\r\n            props.labelStrokeColor = node.labelStrokeColor;\r\n        if (node.labelPadding != null)\r\n            props.labelPadding = node.labelPadding;\r\n        if (node.labelFont != null)\r\n            props.labelFont = node.labelFont;\r\n        if (node.labelColors != null)\r\n            props.labelColors = node.labelColors;\r\n        if (node.labelBold != null)\r\n            props.labelBold = node.labelBold;\r\n        if (node.labelAlign != null)\r\n            props.labelAlign = node.labelAlign;\r\n        if (!isNaN(node.stateNum))\r\n            props.stateNum = node.stateNum;\r\n        if (!isNaN(node.labelSize))\r\n            props.labelSize = node.labelSize;\r\n        if (!isNaN(node.labelStroke))\r\n            props.labelStroke = node.labelStroke;\r\n    }\r\n    function Props_ComboBox(node, props) {\r\n        if (node.skin != null)\r\n            props.skin = node.skin;\r\n        if (node.sizeGrid != null)\r\n            props.sizeGrid = node.sizeGrid;\r\n        if (node.selectedLabel != null)\r\n            props.selectedLabel = node.selectedLabel;\r\n        if (node.scrollBarSkin != null)\r\n            props.scrollBarSkin = node.scrollBarSkin;\r\n        if (node.labels != null)\r\n            props.labels = node.labels;\r\n        if (node.labelFont != null)\r\n            props.labelFont = node.labelFont;\r\n        if (node.labelBold != null)\r\n            props.labelBold = node.labelBold;\r\n        if (node.labelColors != null)\r\n            props.labelColors = node.labelColors;\r\n        if (node.labelPadding != null)\r\n            props.labelPadding = node.labelPadding;\r\n        if (node.itemColors != null)\r\n            props.itemColors = node.itemColors;\r\n        if (!isNaN(node.itemSize))\r\n            props.itemSize = node.itemSize;\r\n        if (!isNaN(node.labelSize))\r\n            props.labelSize = node.labelSize;\r\n        if (!isNaN(node.stateNum))\r\n            props.stateNum = node.stateNum;\r\n        if (!isNaN(node.visibleNum))\r\n            props.visibleNum = node.visibleNum;\r\n        if (!isNaN(node.selectedIndex))\r\n            props.selectedIndex = node.selectedIndex;\r\n    }\r\n    function Props_Slider(node, props) {\r\n        if (node.skin != null)\r\n            props.skin = node.skin;\r\n        if (node.sizeGrid != null)\r\n            props.sizeGrid = node.sizeGrid;\r\n        if (node.showLabel != null)\r\n            props.showLabel = node.showLabel;\r\n        if (node.allowClickBack != null)\r\n            props.allowClickBack = node.allowClickBack;\r\n        if (!isNaN(node.value))\r\n            props.value = node.value;\r\n        if (!isNaN(node.tick))\r\n            props.tick = node.tick;\r\n        if (!isNaN(node.min))\r\n            props.min = node.min;\r\n        if (!isNaN(node.max))\r\n            props.max = node.max;\r\n    }\r\n    function Props_ScrollBar(node, props) {\r\n        if (node.skin != null)\r\n            props.skin = node.skin;\r\n        if (node.hide != null)\r\n            props.hide = node.hide;\r\n        if (node.autoHide != null)\r\n            props.autoHide = node.autoHide;\r\n        if (node.sizeGrid != null)\r\n            props.sizeGrid = node.sizeGrid;\r\n        if (node.showButtons != null)\r\n            props.showButtons = node.showButtons;\r\n        if (node.mouseWheelEnable != null)\r\n            props.mouseWheelEnable = node.mouseWheelEnable;\r\n        if (node.touchScrollEnable != null)\r\n            props.touchScrollEnable = node.touchScrollEnable;\r\n        if (!isNaN(node.value))\r\n            props.value = node.value;\r\n        if (!isNaN(node.min))\r\n            props.min = node.min;\r\n        if (!isNaN(node.max))\r\n            props.max = node.max;\r\n        if (!isNaN(node.rollRatio))\r\n            props.rollRatio = node.rollRatio;\r\n        if (!isNaN(node.scrollSize))\r\n            props.scrollSize = node.scrollSize;\r\n        if (!isNaN(node.elasticDistance))\r\n            props.elasticDistance = node.elasticDistance;\r\n        if (!isNaN(node.elasticBackTime))\r\n            props.elasticBackTime = node.elasticBackTime;\r\n    }\r\n    function Props_ProgressBar(node, props) {\r\n        if (node.skin != null)\r\n            props.skin = node.skin;\r\n        if (node.sizeGrid != null)\r\n            props.sizeGrid = node.sizeGrid;\r\n        if (!isNaN(node.value))\r\n            props.value = node.value;\r\n    }\r\n    function Props_Label(node, props) {\r\n        if (node.text != null)\r\n            props.text = node.text;\r\n        if (node.font != null)\r\n            props.font = node.font;\r\n        if (node.color != null)\r\n            props.color = node.color;\r\n        if (node.align != null)\r\n            props.align = node.align;\r\n        if (node.valign != null)\r\n            props.valign = node.valign;\r\n        if (node.wordWrap != null)\r\n            props.wordWrap = node.wordWrap;\r\n        if (node.underline != null)\r\n            props.underline = node.underline;\r\n        if (node.underlineColor != null)\r\n            props.underlineColor = node.underlineColor;\r\n        if (node.padding != null)\r\n            props.padding = node.padding;\r\n        if (node.overflow != null)\r\n            props.overflow = node.overflow;\r\n        if (node.italic != null)\r\n            props.italic = node.italic;\r\n        if (node.strokeColor != null)\r\n            props.strokeColor = node.strokeColor;\r\n        if (node.borderColor != null)\r\n            props.borderColor = node.borderColor;\r\n        if (node.bold != null)\r\n            props.bold = node.bold;\r\n        if (node.bgColor != null)\r\n            props.bgColor = node.bgColor;\r\n        if (!isNaN(node.leading))\r\n            props.leading = node.leading;\r\n        if (!isNaN(node.fontSize))\r\n            props.fontSize = node.fontSize;\r\n        if (!isNaN(node.stroke))\r\n            props.stroke = node.stroke;\r\n    }\r\n    function Props_TextInput(node, props) {\r\n        if (node.text != null)\r\n            props.text = node.text;\r\n        if (node.skin != null)\r\n            props.skin = node.skin;\r\n        if (node.type != null)\r\n            props.type = node.type;\r\n        if (node.sizeGrid != null)\r\n            props.sizeGrid = node.sizeGrid;\r\n        if (node.restrict != null)\r\n            props.restrict = node.restrict;\r\n        if (node.prompt != null)\r\n            props.prompt = node.prompt;\r\n        if (node.promptColor != null)\r\n            props.promptColor = node.promptColor;\r\n        if (node.multiline != null)\r\n            props.multiline = node.multiline;\r\n        if (node.editable != null)\r\n            props.editable = node.editable;\r\n        if (!isNaN(node.maxChars))\r\n            props.maxChars = node.maxChars;\r\n    }\r\n    function Props_TextArea(node, props) {\r\n        if (node.vScrollBarSkin != null)\r\n            props.vScrollBarSkin = node.vScrollBarSkin;\r\n        if (node.hScrollBarSkin != null)\r\n            props.hScrollBarSkin = node.hScrollBarSkin;\r\n    }\r\n    function Props_ColorPicker(node, props) {\r\n        if (node.selectedColor != null)\r\n            props.selectedColor = node.selectedColor;\r\n        if (node.inputColor != null)\r\n            props.inputColor = node.inputColor;\r\n        if (node.inputBgColor != null)\r\n            props.inputBgColor = node.inputBgColor;\r\n        if (node.borderColor != null)\r\n            props.borderColor = node.borderColor;\r\n        if (node.bgColor != null)\r\n            props.bgColor = node.bgColor;\r\n    }\r\n    function Props_Box(node, props) {\r\n        if (node.bgColor != null)\r\n            props.bgColor = node.bgColor;\r\n    }\r\n    function Props_LayoutBox(node, props) {\r\n        if (node.align != null)\r\n            props.align = node.align;\r\n        if (!isNaN(node.space))\r\n            props.space = node.space;\r\n    }\r\n    function Props_Panel(node, props) {\r\n        if (node.elasticEnabled != null)\r\n            props.elasticEnabled = node.elasticEnabled;\r\n        if (node.hScrollBarSkin != null)\r\n            props.hScrollBarSkin = node.hScrollBarSkin;\r\n        if (node.vScrollBarSkin != null)\r\n            props.vScrollBarSkin = node.vScrollBarSkin;\r\n    }\r\n    function Props_List(node, props) {\r\n        if (!isNaN(node.width))\r\n            props.width = node.width;\r\n        if (!isNaN(node.height))\r\n            props.height = node.height;\r\n        if (!isNaN(node.spaceX))\r\n            props.spaceX = node.spaceX;\r\n        if (!isNaN(node.spaceY))\r\n            props.spaceY = node.spaceY;\r\n        if (!isNaN(node.repeatX))\r\n            props.repeatX = node.repeatX;\r\n        if (!isNaN(node.repeatY))\r\n            props.repeatY = node.repeatY;\r\n        if (!isNaN(node.selectedIndex))\r\n            props.selectedIndex = node.selectedIndex;\r\n        if (node.selectEnable != null)\r\n            props.selectEnable = node.selectEnable;\r\n        if (node.elasticEnabled != null)\r\n            props.elasticEnabled = node.elasticEnabled;\r\n        if (node.hScrollBarSkin != null)\r\n            props.hScrollBarSkin = node.hScrollBarSkin;\r\n        if (node.vScrollBarSkin != null)\r\n            props.vScrollBarSkin = node.vScrollBarSkin;\r\n    }\r\n    function Props_Tree(node, props) {\r\n        if (!isNaN(node.width))\r\n            props.width = node.width;\r\n        if (!isNaN(node.height))\r\n            props.height = node.height;\r\n        if (!isNaN(node.spaceLeft))\r\n            props.spaceLeft = node.spaceLeft;\r\n        if (!isNaN(node.spaceBottom))\r\n            props.spaceBottom = node.spaceBottom;\r\n        if (!isNaN(node.selectedIndex))\r\n            props.selectedIndex = node.selectedIndex;\r\n        if (node.scrollBarSkin != null)\r\n            props.scrollBarSkin = node.scrollBarSkin;\r\n        if (node.keepStatus != null)\r\n            props.keepStatus = node.keepStatus;\r\n    }\r\n    function Props_ViewStack(node, props) {\r\n        if (!isNaN(node.selectedIndex))\r\n            props.selectedIndex = node.selectedIndex;\r\n    }\r\n    function Props_UIGroup(node, props) {\r\n        if (node.skin != null)\r\n            props.skin = node.skin;\r\n        if (node.labels != null)\r\n            props.labels = node.labels;\r\n        if (node.labelStrokeColor != null)\r\n            props.labelStrokeColor = node.labelStrokeColor;\r\n        if (node.labelPadding != null)\r\n            props.labelPadding = node.labelPadding;\r\n        if (node.labelFont != null)\r\n            props.labelFont = node.labelFont;\r\n        if (node.labelColors != null)\r\n            props.labelColors = node.labelColors;\r\n        if (node.labelBold != null)\r\n            props.labelBold = node.labelBold;\r\n        if (node.strokeColors != null)\r\n            props.strokeColors = node.strokeColors;\r\n        if (node.direction != null)\r\n            props.direction = node.direction;\r\n        if (!isNaN(node.space))\r\n            props.space = node.space;\r\n        if (!isNaN(node.stateNum))\r\n            props.stateNum = node.stateNum;\r\n        if (!isNaN(node.selectedIndex))\r\n            props.selectedIndex = node.selectedIndex;\r\n        if (!isNaN(node.labelStroke))\r\n            props.labelStroke = node.labelStroke;\r\n        if (!isNaN(node.labelSize))\r\n            props.labelSize = node.labelSize;\r\n    }\r\n    function Props_Tab(node, props) {\r\n        if (node[\"labelAlign\"] != null)\r\n            props.labelAlign = node[\"labelAlign\"];\r\n    }\r\n})(GO || (GO = {}));\r\n",
  "references": []
}
