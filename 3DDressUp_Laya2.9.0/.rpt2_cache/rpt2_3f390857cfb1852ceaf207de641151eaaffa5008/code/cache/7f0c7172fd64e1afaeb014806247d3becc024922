{
  "code": "import { DataAdmin, DateAdmin, StorageAdmin, TimerAdmin, Tools } from \"../Lwg/Lwg\";\r\nimport { _3D } from \"./_3D\";\r\nimport { _Res } from \"./_Res\";\r\nexport var _GameData;\r\n(function (_GameData) {\r\n    class _Guide {\r\n        static get _complete() {\r\n            return StorageAdmin._bool('_Guide_complete').value;\r\n        }\r\n        ;\r\n        static set _complete(val) {\r\n            StorageAdmin._bool('_Guide_complete').value = val;\r\n        }\r\n        static get MakePatternState() {\r\n            return this['/MakePatternState'] ? this['/MakePatternState'] : 'ChooseClassify';\r\n        }\r\n        ;\r\n        static set MakePatternState(_state) {\r\n            this['/MakePatternState'] = _state;\r\n        }\r\n    }\r\n    _Guide.event = {\r\n        closeGuide: 'Guide' + 'closeGuide',\r\n        vanishGuide: 'Guide' + 'vanishGuide',\r\n        StartBtnDress: 'Guide' + 'StartBtnDress',\r\n        MakeTailorPulldown: 'Guide' + 'MakeTailorPulldown',\r\n        MakeTailorChangeCloth: 'Guide' + 'MakeTailorChangeCloth',\r\n        MakeTailorBtnCom: 'Guide' + 'MakeTailorBtnCom',\r\n        MakeTailorStartTailor: 'Guide' + 'MakeTailorStartTailor',\r\n        MakeTailorNewTailor: 'Guide' + 'MakeTailorNewTailor',\r\n        MakeTailorCloseTailor: 'Guide' + 'MakeTailorCloseTailor',\r\n        MakeTailorOpenTailor: 'Guide' + 'MakeTailorOpenTailor',\r\n        MakePatternChooseClassify: 'Guide' + 'MakePatternChooseClassify',\r\n        MakePatternPattern1: 'Guide' + 'MakePatternPattern1',\r\n        MakePatternFrame1: 'Guide' + 'MakePatternFrame1',\r\n        MakePatternTurnFace: 'Guide' + 'MakePatternTurnFace',\r\n        MakePatternFrame2: 'Guide' + 'MakePatternFrame2',\r\n        MakePatternPattern2: 'Guide' + 'MakePatternPattern2',\r\n        MakePatternBtnCom: 'Guide' + 'MakePatternBtnCom',\r\n        TweetingBtnChoosePhoto: 'Guide' + 'TweetingBtnChoosePhoto',\r\n        TweetingChoosePhoto: 'Guide' + 'TweetingChoosePhoto',\r\n        TweetingBtnSend: 'Guide' + 'TweetingBtnSend',\r\n        TweetingBtnDoubleFans: 'Guide' + 'TweetingBtnDoubleFans',\r\n        RankingCloseBtn: 'Guide' + 'RankingCloseBtn',\r\n        PersonalInfoBtn: 'Guide' + 'PersonalInfoBtn',\r\n        PersonalInfoWriteName: 'Guide' + 'PersonalInfoWriteName',\r\n        PersonalInfoCloseBtn: 'Guide' + 'PersonalInfoCloseBtn',\r\n        DelayBtnCheckIn: 'Start' + 'DelayBtnCheckIn',\r\n        BtnCheckIn: 'Guide' + 'BtnCheckIn',\r\n        CheckInGetReward: 'Guide' + 'CheckInGetReward',\r\n        CheckInCloseBtn: 'Guide' + 'CheckInBtnClose',\r\n        StartOtherBtnClick: 'Guide' + 'StartOtherBtnClick',\r\n    };\r\n    _Guide.MmakeTailorPulldownSwicth = false;\r\n    _Guide.MmakeTailorBtnComSwicth = false;\r\n    _Guide.MakePatternStateType = {\r\n        ChooseClassify: `ChooseClassify`,\r\n        Pattern1: 'Pattern1',\r\n        Frame1: 'Frame1',\r\n        TurnFace: 'TurnFace',\r\n        Frame2: 'Frame2',\r\n        Pattern2: 'Pattern2',\r\n        BtnCom: 'BtnCom',\r\n        closeGuide: 'closeGuide',\r\n    };\r\n    _Guide.CheckInCloseBtn = false;\r\n    _GameData._Guide = _Guide;\r\n    class _Start {\r\n    }\r\n    _Start.event = {\r\n        photo: 'Start' + 'photo',\r\n        updateRanking: 'Start' + 'updateRanking',\r\n        BtnPersonalInfo: 'Start' + 'BtnPersonalInfo',\r\n    };\r\n    _GameData._Start = _Start;\r\n    class _AllClothes extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._classify = {\r\n                DIY: 'DIY',\r\n                General: 'General',\r\n            };\r\n            this._part = {\r\n                Dress: 'Dress',\r\n                Top: 'Top',\r\n                Bottoms: 'Bottoms',\r\n                FaceMask: 'FaceMask',\r\n                Accessories: 'Accessories',\r\n                Shoes: 'Shoes',\r\n                Hair: 'Hair',\r\n            };\r\n            this._otherPro = {\r\n                putOn: 'putOn',\r\n                part: 'part'\r\n            };\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _AllClothes('ClothesGeneral', _Res._list.json.GeneralClothes.dataArr, true);\r\n            }\r\n            return this.ins;\r\n        }\r\n        getDIYTexBasicUrl(clothesName) {\r\n            return `https://h5.tomatojoy.cn/res/ark/3d04671eec61b1e12a6c02e54c1e7320/1.0.0/3DDressUp/DIYTexbasic/${clothesName.substr(0, clothesName.length - 5)}basic.png`;\r\n        }\r\n        getGeneralIcon(clothesName) {\r\n            return `https://h5.tomatojoy.cn/res/ark/3d04671eec61b1e12a6c02e54c1e7320/1.0.0/3DDressUp/Icon/General/${clothesName}.png`;\r\n        }\r\n        ;\r\n        collectDIY() {\r\n            let DIYArr = _DIYClothes._ins()._getArrByNoProperty(_DIYClothes._ins()._otherPro.icon, \"\");\r\n            const copyArr = Tools._ObjArray.arrCopy(DIYArr);\r\n            Tools._ObjArray.modifyProValue(copyArr, this._property.$classify, 'DIY');\r\n            this._addObjectArr(copyArr);\r\n            return copyArr;\r\n        }\r\n        changeAfterMaking() {\r\n            this.collectDIY();\r\n            this.accurateChange(_DIYClothes._ins()._getPitchProperty('part'), _DIYClothes._ins()._pitchName);\r\n        }\r\n        changeClass(classify, partArr, playAni, start) {\r\n            const _classify = _3D._Scene._ins()._Root.getChildByName(classify);\r\n            for (let i = 0; i < _classify.numChildren; i++) {\r\n                const _classifySp = _classify.getChildAt(i);\r\n                _classifySp.active = false;\r\n                for (let j = 0; j < partArr.length; j++) {\r\n                    const obj = partArr[j];\r\n                    if (obj[this._otherPro.part] === _classifySp.name) {\r\n                        _classifySp.active = true;\r\n                        for (let k = 0; k < _classifySp.numChildren; k++) {\r\n                            const cloth = _classifySp.getChildAt(k);\r\n                            if (cloth.name === obj[this._property.$name]) {\r\n                                cloth.active = true;\r\n                                const delay = start ? 40 : 15;\r\n                                if (classify === 'DIY') {\r\n                                    const url = this.getDIYTexBasicUrl(cloth.name);\r\n                                    const fSp = new Laya.Sprite;\r\n                                    fSp.visible = false;\r\n                                    Laya.stage.addChild(fSp);\r\n                                    fSp.zOrder = 1000;\r\n                                    fSp.size(512, 512);\r\n                                    fSp.scale(1, -1);\r\n                                    fSp.pos(0, 512);\r\n                                    const FImg = new Laya.Image;\r\n                                    FImg.skin = url;\r\n                                    fSp.addChild(FImg);\r\n                                    FImg.size(512, 512);\r\n                                    FImg.pos(0, 0);\r\n                                    const ftexData = StorageAdmin._array(`${cloth.name}/${_DIYClothes._ins()._otherPro.texF}`).value;\r\n                                    for (let index = 0; index < ftexData.length; index++) {\r\n                                        const data = ftexData[index];\r\n                                        const Img = new Laya.Image;\r\n                                        fSp.addChild(Img);\r\n                                        Img.skin = `Pattern/${data['name']}.png`;\r\n                                        Img.x = data['x'];\r\n                                        Img.y = data['y'];\r\n                                        Img.anchorX = data['anchorX'];\r\n                                        Img.anchorY = data['anchorY'];\r\n                                        Img.width = data['width'];\r\n                                        Img.height = data['height'];\r\n                                        Img.height = data['height'];\r\n                                        Img.rotation = data['rotation'];\r\n                                        Img.zOrder = data['zOrder'];\r\n                                    }\r\n                                    const front = cloth.getChildByName(`${cloth.name}_0`);\r\n                                    const matF = front.skinnedMeshRenderer.material;\r\n                                    TimerAdmin._frameOnce(delay, this, () => {\r\n                                        matF.albedoTexture && matF.albedoTexture.destroy();\r\n                                        matF.albedoTexture = fSp.drawToTexture(fSp.width, fSp.height, fSp.x, fSp.y + fSp.height);\r\n                                        fSp.removeSelf();\r\n                                    });\r\n                                    const rSp = new Laya.Sprite;\r\n                                    rSp.visible = false;\r\n                                    Laya.stage.addChild(rSp);\r\n                                    rSp.zOrder = 1000;\r\n                                    rSp.size(512, 512);\r\n                                    rSp.scale(1, -1);\r\n                                    const RImg = new Laya.Image;\r\n                                    RImg.skin = url;\r\n                                    rSp.addChild(RImg);\r\n                                    RImg.size(512, 512);\r\n                                    rSp.pos(512, 0);\r\n                                    const rtexData = StorageAdmin._array(`${cloth.name}/${_DIYClothes._ins()._otherPro.texR}`).value;\r\n                                    for (let index = 0; index < rtexData.length; index++) {\r\n                                        const data = rtexData[index];\r\n                                        const Img = new Laya.Image;\r\n                                        rSp.addChild(Img);\r\n                                        Img.skin = `Pattern/${data['name']}.png`;\r\n                                        Img.x = data['x'];\r\n                                        Img.y = data['y'];\r\n                                        Img.anchorX = data['anchorX'];\r\n                                        Img.anchorY = data['anchorY'];\r\n                                        Img.width = data['width'];\r\n                                        Img.height = data['height'];\r\n                                        Img.height = data['height'];\r\n                                        Img.rotation = data['rotation'];\r\n                                        Img.zOrder = data['zOrder'];\r\n                                    }\r\n                                    const reverse = cloth.getChildByName(`${cloth.name}_1`);\r\n                                    const matR = reverse.skinnedMeshRenderer.material;\r\n                                    TimerAdmin._frameOnce(delay, this, () => {\r\n                                        matR.albedoTexture && matR.albedoTexture.destroy();\r\n                                        matR.albedoTexture = rSp.drawToTexture(rSp.width, rSp.height, rSp.x, rSp.y + rSp.height);\r\n                                        rSp.removeSelf();\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                cloth.active = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            playAni && _3D._Scene._ins().playDispalyAni();\r\n        }\r\n        changeClothStart() {\r\n            this.collectDIY();\r\n            const arr = this._getArrByProperty(this._otherPro.putOn, true);\r\n            this.changeClass(this._classify.DIY, arr, false, true);\r\n            this.changeClass(this._classify.General, arr, false, true);\r\n            this.startSpecialSet();\r\n        }\r\n        changeCloth() {\r\n            const arr = this._getArrByProperty(this._otherPro.putOn, true);\r\n            this.changeClass(this._classify.DIY, arr, true);\r\n            this.changeClass(this._classify.General, arr, true);\r\n        }\r\n        startSpecialSet() {\r\n            if (StorageAdmin._bool('DressState').value) {\r\n                _3D._Scene._ins()._GBottoms.active = _3D._Scene._ins()._GTop.active = _3D._Scene._ins()._DBottoms.active = _3D._Scene._ins()._DTop.active = false;\r\n            }\r\n            else {\r\n                _3D._Scene._ins()._GDress.active = _3D._Scene._ins()._DDress.active = false;\r\n            }\r\n        }\r\n        specialSet(part) {\r\n            if (part === this._part.Dress) {\r\n                StorageAdmin._bool('DressState').value = true;\r\n            }\r\n            else if (part === this._part.Top || part === this._part.Bottoms) {\r\n                StorageAdmin._bool('DressState').value = false;\r\n            }\r\n            if (StorageAdmin._bool('DressState').value) {\r\n                _3D._Scene._ins().displayDress();\r\n            }\r\n            else {\r\n                _3D._Scene._ins().displayTopAndBotton();\r\n            }\r\n        }\r\n        accurateChange(partValue, name) {\r\n            const arr = _AllClothes._ins()._getArrByProperty('part', partValue);\r\n            for (let index = 0; index < arr.length; index++) {\r\n                const element = arr[index];\r\n                if (name === element['name']) {\r\n                    element['putOn'] = true;\r\n                }\r\n                else {\r\n                    element['putOn'] = false;\r\n                }\r\n            }\r\n            _DIYClothes._ins()._setProperty(_DIYClothes._ins()._pitchName, 'putOn', true);\r\n            _AllClothes._ins().changeCloth();\r\n            _AllClothes._ins().specialSet(partValue);\r\n            _AllClothes._ins()._refreshAndStorage();\r\n        }\r\n    }\r\n    _GameData._AllClothes = _AllClothes;\r\n    class _DIYClothes extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._classify = {\r\n                Dress: 'Dress',\r\n                Top: 'Top',\r\n                Bottoms: 'Bottoms',\r\n                ads: 'ads',\r\n            };\r\n            this._otherPro = {\r\n                color: 'color',\r\n                icon: 'icon',\r\n                diffX: 'diffX',\r\n                diffY: 'diffY',\r\n                texR: 'texR',\r\n                texF: 'texF',\r\n            };\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _DIYClothes('DIYClothes', _Res._list.json.DIYClothes.dataArr, true);\r\n            }\r\n            return this.ins;\r\n        }\r\n        ;\r\n        getPitchTexBasicUrl() {\r\n            return `https://h5.tomatojoy.cn/res/ark/3d04671eec61b1e12a6c02e54c1e7320/1.0.0/3DDressUp/DIYTexbasic/${this._pitchName.substr(0, this._pitchName.length - 5)}basic.png`;\r\n        }\r\n        getDIYCutIcon(name) {\r\n            return `https://h5.tomatojoy.cn/res/ark/3d04671eec61b1e12a6c02e54c1e7320/1.0.0/3DDressUp/Icon/DIY/${name.substr(0, name.length - 5)}cut.png`;\r\n        }\r\n        getColor() {\r\n            let obj = this._getPitchObj();\r\n            return [obj[`${this._otherPro.color}1`], obj[`${this._otherPro.color}2`]];\r\n        }\r\n        getClothesArr() {\r\n            if (!this.ClothesArr) {\r\n                this.ClothesArr = [];\r\n                const dataArr = _DIYClothes._ins()._arr;\r\n                for (let index = 0; index < dataArr.length; index++) {\r\n                    if (`${dataArr[index]['name']}` !== 'ads') {\r\n                        let CloBox = this.createClothes(`${dataArr[index]['name']}`);\r\n                        this.ClothesArr.push(CloBox);\r\n                    }\r\n                    else {\r\n                    }\r\n                }\r\n            }\r\n            return this.ClothesArr;\r\n        }\r\n        createClothes(name, Scene) {\r\n            const Cloth = Tools._Node.createPrefab(_Res._list.prefab2D[name]['prefab']);\r\n            const CloBox = new Laya.Sprite;\r\n            CloBox.width = Laya.stage.width;\r\n            CloBox.height = Laya.stage.height;\r\n            CloBox.pivotX = CloBox.width / 2;\r\n            CloBox.pivotY = CloBox.height / 2;\r\n            CloBox.x = Laya.stage.width / 2;\r\n            CloBox.y = Laya.stage.height / 2;\r\n            CloBox.addChild(Cloth);\r\n            CloBox.name = name;\r\n            if (Scene) {\r\n                Scene.addChild(CloBox);\r\n                CloBox.zOrder = 20;\r\n            }\r\n            return CloBox;\r\n        }\r\n    }\r\n    _GameData._DIYClothes = _DIYClothes;\r\n    class _Ranking extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._whereFrom = 'Start';\r\n            this._otherPro = {\r\n                rankNum: 'rankNum',\r\n                fansNum: 'fansNum',\r\n                iconSkin: 'iconSkin',\r\n            };\r\n            this._classify = {\r\n                other: 'other',\r\n                self: 'self',\r\n            };\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _Ranking('RankingData', _Res._list.json.Ranking.dataArr, true);\r\n                if (!this.ins._arr[0]['iconSkin']) {\r\n                    for (let index = 0; index < this.ins._arr.length; index++) {\r\n                        const element = this.ins._arr[index];\r\n                        element['iconSkin'] = `Game/UI/Ranking/IconSkin/avatar_${element[this.ins._property.$serial]}.png`;\r\n                    }\r\n                }\r\n                this.ins._pitchName = '玩家';\r\n                this.ins._sortByProperty(this.ins._otherPro.fansNum, this.ins._otherPro.rankNum);\r\n            }\r\n            return this.ins;\r\n        }\r\n    }\r\n    _GameData._Ranking = _Ranking;\r\n    class _MakeTailor {\r\n    }\r\n    _MakeTailor.event = {\r\n        scissorTrigger: '_MakeTailor_scissorTrigger',\r\n        completeEffcet: '_MakeTailor_completeAni',\r\n        changeClothes: '_MakeTailor_changeClothes',\r\n        scissorAppear: '_MakeTailor_scissorAppear',\r\n        scissorPlay: '_MakeTailor_scissorPlay',\r\n        scissorStop: '_MakeTailor_scissorStop',\r\n        scissorRotation: '_MakeTailor_scissorRotation',\r\n        scissorAgain: '_MakeTailor_scissorSitu',\r\n        scissorRemove: '_MakeTailor_scissorRemove',\r\n    };\r\n    _GameData._MakeTailor = _MakeTailor;\r\n    class _MakePattern {\r\n    }\r\n    _MakePattern.event = {\r\n        close: '_MakePattern_close',\r\n        createImg: '_MakePattern_createImg',\r\n    };\r\n    _GameData._MakePattern = _MakePattern;\r\n    class _DressingRoom {\r\n    }\r\n    _DressingRoom.event = {\r\n        changeCloth: '_DressingRoom_ChangeCloth',\r\n    };\r\n    _GameData._DressingRoom = _DressingRoom;\r\n    class _Tweeting {\r\n        static get _attentionNum() {\r\n            return StorageAdmin._num('_MakePattern/attention', null, 180).value;\r\n        }\r\n        ;\r\n        static set _attentionNum(val) {\r\n            StorageAdmin._num('_MakePattern/attention').value = val;\r\n        }\r\n        static get _completeNum() {\r\n            return StorageAdmin._num('_MakePattern/completeNum').value;\r\n        }\r\n        ;\r\n        static set _completeNum(val) {\r\n            StorageAdmin._num('_MakePattern/completeNum').value = val;\r\n        }\r\n        static get _forwardedNum() {\r\n            return StorageAdmin._num('Tweeting/forwarded', null, Tools._Number.randomOneBySection(75, 125, true)).value;\r\n        }\r\n        ;\r\n        static set _forwardedNum(val) {\r\n            StorageAdmin._num('Tweeting/forwarded').value = val;\r\n        }\r\n        static get _commentNum() {\r\n            return StorageAdmin._num('Tweeting/Comment', null, Tools._Number.randomOneBySection(100, 150, true)).value;\r\n        }\r\n        ;\r\n        static set _commentNum(val) {\r\n            StorageAdmin._num('Tweeting/Comment').value = val;\r\n        }\r\n        static get _likeNum() {\r\n            return StorageAdmin._num('Tweeting/like', null, Tools._Number.randomOneBySection(200, 250, true)).value;\r\n        }\r\n        ;\r\n        static set _likeNum(val) {\r\n            StorageAdmin._num('Tweeting/like').value = val;\r\n        }\r\n    }\r\n    _Tweeting._photo = {\r\n        arr: [],\r\n        take: (Scene, index) => {\r\n            _Tweeting._photo.arr[index] && _Tweeting._photo.arr[index].destroy();\r\n            _Tweeting._photo.arr[index] = Scene.drawToTexture(Laya.stage.width, Laya.stage.height, 0, 0);\r\n        },\r\n        clear: () => {\r\n            for (let index = 0; index < _Tweeting._photo.arr.length; index++) {\r\n                const element = _Tweeting._photo.arr[index];\r\n                element && element.destroy();\r\n            }\r\n            _Tweeting._photo.arr = [];\r\n            Laya.Resource.destroyUnusedResources();\r\n        }\r\n    };\r\n    _Tweeting._brief = {\r\n        getThree: () => {\r\n            return Tools._Array.randomGetOut(_Tweeting._brief.all, 3);\r\n        },\r\n        getOne: () => {\r\n            return Tools._Array.randomGetOut(_Tweeting._brief.all);\r\n        },\r\n        all: [\r\n            '世界很烦，但我要很可爱',\r\n            '生活就是见招拆招',\r\n            '忠于自己，热爱生活',\r\n            '我很有个性，但我不想签名',\r\n            'T^T\t',\r\n            '你最怕什么',\r\n            '宁缺毋滥',\r\n            '围脖红人',\r\n            '剪裁大师',\r\n            '剪裁王',\r\n        ]\r\n    };\r\n    _Tweeting._mainBody = {\r\n        getOne: () => {\r\n            _Tweeting._mainBody.present = Tools._Array.randomGetOne(_Tweeting._mainBody.all);\r\n            return _Tweeting._mainBody.present;\r\n        },\r\n        present: null,\r\n        all: [\r\n            '不管几岁，反正少女心万岁≧▽≦',\r\n            '此处可爱贩卖机  24小时正常营业\t',\r\n            '欢迎光临我的手工小店，我会制作更多大家喜欢的衣服哦',\r\n            '现在一定有个很可爱的人，在看我的这句话',\r\n            '辛辛苦苦做了好久，结果很满意，好喜欢哦',\r\n            '大家觉得我这套衣服怎么样',\r\n            '闲来无事，做了一套衣服，感觉还不错',\r\n            '我觉得吧，这次发挥的一般，下次会更好，敬请期待',\r\n            '浮游于这个世界所产生的热能 也比不过喜欢你的热忱\t',\r\n            '时间会把对你最好的人留在最后，毕竟喜欢是一阵风，而爱是细水长流',\r\n            '人生难免遇上些许不如意，翻过这一页就会发现生活处处有美好',\r\n            '也许，只有制作衣服的时候，才会让自己的心静下来',\r\n            '讲道理，我觉得我的手艺还不错，我是不是可以考虑开一家店了？',\r\n            '技术还不太行，需要多多磨炼，再努力做几件衣服吧~',\r\n            '今天心情好，早早地起来做衣服了，我是可爱的小裁缝~啦啦啦~',\r\n            '给妈妈做了件衣服，妈妈说好喜欢~',\r\n            '还有什么可以比做自己喜欢的事更加让人开心的呢~',\r\n            '一些些自己的小设计，就可以让一件衣服焕发生机',\r\n            '也许只是一瞬间的灵感，我将会付之于行动来实现它',\r\n            '对于剪裁和搭配的热情，我不会输给任何人的~',\r\n            '加油，我会成为最好的设计师的，我会爆火！~',\r\n            '坚持不懈，认真对待自己的，努力成为最好的设计师！~',\r\n            '感谢大家的支持，我会努力的',\r\n        ]\r\n    };\r\n    _Tweeting._reply = {\r\n        getTow: () => {\r\n            return Tools._Array.randomGetOut(_Tweeting._reply.all, 2);\r\n        },\r\n        all: [\r\n            '加油，坚持，我看好你哦',\r\n            '好好看，我也想要',\r\n            '那么请问在哪里可以买到呢',\r\n            '有一说一，真的还可以',\r\n            '感觉，你做的越来越好了',\r\n            '我也想和你一样拥有如此灵巧的双手',\r\n            '真的好看，加油',\r\n            '我的天，这也太美了吧',\r\n            'OMG，买他买他！~',\r\n            '沙发~~',\r\n            '点赞这条回复，你会好运连连',\r\n            '求翻牌，你这也太美了吧',\r\n            '太适合仙女了吧',\r\n            '我也想学学，能教教我吗',\r\n            '感觉你能火，坚持，加油',\r\n            '感觉没有什么可以难倒你',\r\n            '我想和你一样心灵手巧',\r\n            '我的天，这是真的太好看了',\r\n            ' U1S1，是真漂亮~',\r\n            '我觉得你还可以更优秀~',\r\n            '不是我杠精，你这个真的，真可以，没的杠',\r\n            '好看是真好看，难也是真的难',\r\n            '感觉我学不会，咋办，好美',\r\n            '仙女穿起来也太好看了吧',\r\n            '花痴脸~这也太美了',\r\n            '坚持，我看好你哦，感觉你能火',\r\n            '天哪，这也太美了吧',\r\n        ]\r\n    };\r\n    _Tweeting._photoIndex = 0;\r\n    _GameData._Tweeting = _Tweeting;\r\n    class _CheckIn extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._otherPro = {\r\n                checkAddition: 'checkAddition',\r\n                otherRewardType: 'otherRewardType',\r\n                otherRewardNum: 'otherRewardNum',\r\n                otherCompelet: 'otherCompelet',\r\n            };\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _CheckIn('CheckIn', _Res._list.json.CheckIn.dataArr, true);\r\n            }\r\n            return this.ins;\r\n        }\r\n        get _immediately() {\r\n            return StorageAdmin._num('_CheckIn/immediately').value;\r\n        }\r\n        ;\r\n        set _immediately(val) {\r\n            StorageAdmin._num('_CheckIn/immediately').value = val;\r\n        }\r\n        get _checkInNum() {\r\n            return StorageAdmin._num('_CheckIn/checkInNum').value;\r\n        }\r\n        ;\r\n        set _checkInNum(val) {\r\n            StorageAdmin._num('_CheckIn/checkInNum').value = val;\r\n        }\r\n        get _lastCheckDate() {\r\n            return StorageAdmin._num('_CheckIn/lastCheckDate').value;\r\n        }\r\n        ;\r\n        set _lastCheckDate(val) {\r\n            StorageAdmin._num('_CheckIn/lastCheckDate').value = val;\r\n        }\r\n        get _todayCheckIn() {\r\n            return this._lastCheckDate == DateAdmin._date.date ? true : false;\r\n        }\r\n        ;\r\n    }\r\n    _GameData._CheckIn = _CheckIn;\r\n    class _Pattern extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._classify = {\r\n                newYear: 'newYear',\r\n                basic: 'basic',\r\n                cat: 'cat',\r\n                pink: 'pink',\r\n                expression: 'expression',\r\n            };\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _Pattern('_Pattern', _Res._list.json.MakePattern.dataArr, true);\r\n                this.ins._pitchClassify = this.ins._classify.newYear;\r\n                this.ins.newYearArr = this.ins._getArrByClassify(this.ins._classify.newYear);\r\n                this.ins.newYearArr.push({}, {});\r\n                this.ins.basicArr = this.ins._getArrByClassify(this.ins._classify.basic);\r\n                this.ins.basicArr.push({}, {});\r\n                this.ins.catArr = this.ins._getArrByClassify(this.ins._classify.cat);\r\n                this.ins.catArr.push({}, {});\r\n                this.ins.pinkArr = this.ins._getArrByClassify(this.ins._classify.pink);\r\n                this.ins.pinkArr.push({}, {});\r\n                this.ins.expressionArr = this.ins._getArrByClassify(this.ins._classify.expression);\r\n                this.ins.expressionArr.push({}, {});\r\n            }\r\n            return this.ins;\r\n        }\r\n    }\r\n    _GameData._Pattern = _Pattern;\r\n    class _PatternDiff extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._otherPro = {\r\n                fDiffX: 'fDiffX',\r\n                fDiffY: 'fDiffY',\r\n                rDiffX: 'rDiffX',\r\n                rDiffY: 'rDiffY',\r\n            };\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _PatternDiff('_DIYClothesDiff', _Res._list.json.DIYClothesDiff.dataArr, false);\r\n            }\r\n            return this.ins;\r\n        }\r\n        get fDiffX() {\r\n            return _GameData._PatternDiff._ins()._getProperty(_3D.DIYCloth._ins().name, 'fDiffX');\r\n        }\r\n        ;\r\n        get fDiffY() {\r\n            return _GameData._PatternDiff._ins()._getProperty(_3D.DIYCloth._ins().name, 'fDiffY');\r\n        }\r\n        ;\r\n        get rDiffX() {\r\n            return _GameData._PatternDiff._ins()._getProperty(_3D.DIYCloth._ins().name, 'rDiffX');\r\n        }\r\n        ;\r\n        get rDiffY() {\r\n            return _GameData._PatternDiff._ins()._getProperty(_3D.DIYCloth._ins().name, 'rDiffY');\r\n        }\r\n        ;\r\n    }\r\n    _GameData._PatternDiff = _PatternDiff;\r\n})(_GameData || (_GameData = {}));\r\n",
  "references": [
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/Lwg.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Game/_3D.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Game/_Res.ts"
  ]
}
