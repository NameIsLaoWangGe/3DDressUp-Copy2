{
  "code": "import { Admin, Animation2D, Effects2D, TimerAdmin, Tools } from \"../Lwg/Lwg\";\r\nimport { _GameAni } from \"./_GameAni\";\r\nimport { _GameData } from \"./_GameData\";\r\nexport default class Guide extends Admin._SceneBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.btnComX = Laya.stage.width - 250;\r\n        this.btnComY = 70;\r\n        this.bgType = {\r\n            present: 'present',\r\n            vanish: 'vanish',\r\n            appear: 'appear',\r\n        };\r\n        this._stepTailor = 0;\r\n        this.posArr = [\r\n            [Laya.stage.width / 2 + 110, 140],\r\n            [Laya.stage.width / 2 - 110, Laya.stage.height / 2 - 220],\r\n            [Laya.stage.width / 2 + 100, Laya.stage.height / 2 - 200],\r\n            [Laya.stage.width / 2 + 200, Laya.stage.height - 150],\r\n        ];\r\n        this.nameArr = ['Line01', 'Line02', 'Line03', 'Line04'];\r\n        this.presentName = null;\r\n    }\r\n    lwgOpenAni() {\r\n        return 200;\r\n    }\r\n    lwgOnAwake() {\r\n        this._ImgVar('Hand').scale(0, 0);\r\n        this._ImgVar('Slide').scale(0, 0);\r\n    }\r\n    clickEffcet() {\r\n        Effects2D._Aperture._continuous(this._Owner, [this._ImgVar('Hand').x, this._ImgVar('Hand').y + 28], [6, 6], null, null, [Effects2D._SkinUrl.圆形小光环], null, this._ImgVar('Hand').zOrder - 1, [1.2, 1.2], [0.6, 0.6], [0.01, 0.01]);\r\n    }\r\n    boreholeCircle(arr, handX, handY, func) {\r\n        for (let index = 0; index < arr.length; index++) {\r\n            const time = 80 / 8;\r\n            let radiusBase = 15;\r\n            const element = arr[index];\r\n            const speed = (arr[index][2] - radiusBase) / time;\r\n            TimerAdmin._frameNumLoop(1, time, this, () => {\r\n                radiusBase += speed;\r\n                element[2] = radiusBase;\r\n                Tools._Draw.reverseCircleMask(this._ImgVar('Background'), arr, true);\r\n            }, () => {\r\n                func && func();\r\n            }, true);\r\n        }\r\n        handX && this._ImgVar('Hand').pos(handX, handY - 30);\r\n    }\r\n    boreholeRoundrect(arr, handX, handY, func) {\r\n        handX && this._ImgVar('Hand').pos(handX, handY);\r\n        for (let index = 0; index < arr.length; index++) {\r\n            let widthBase = 0;\r\n            let heightBase = 0;\r\n            let radiuBase = 0;\r\n            const element = arr[index];\r\n            const time = 20;\r\n            const speedX = (element[2] - widthBase) / time;\r\n            const speedY = (element[3] - heightBase) / time;\r\n            const speedR = (element[4] - radiuBase) / time;\r\n            TimerAdmin._frameNumLoop(1, time, this, () => {\r\n                widthBase += speedX;\r\n                heightBase += speedY;\r\n                radiuBase += speedR;\r\n                element[2] = widthBase;\r\n                element[3] = heightBase;\r\n                element[4] = radiuBase;\r\n                Tools._Draw.reverseRoundrectMask(this._ImgVar('Background'), arr, true);\r\n            }, () => {\r\n                func && func();\r\n            }, true);\r\n        }\r\n        handX && this._ImgVar('Hand').pos(handX, handY);\r\n    }\r\n    handAppear(delay, func) {\r\n        const time = 200;\r\n        Animation2D.scale(this._ImgVar('Hand'), 0, 0, 1, 1, time, delay ? delay : 0, () => {\r\n            func && func();\r\n        });\r\n        this._ImgVar('HandPic').rotation = -17;\r\n    }\r\n    bgAppear(delay, func) {\r\n        Tools._Node.destroyAllChildren(this._ImgVar('Background'));\r\n        const time = 300;\r\n        this._ImgVar('HandPic').rotation = -17;\r\n        Animation2D.fadeOut(this._ImgVar('Background'), 0, 1, time, delay ? delay : 0, () => {\r\n            func && func();\r\n        });\r\n    }\r\n    handVanish(delay, func) {\r\n        const time = 300;\r\n        this._ImgVar('HandPic').rotation = -17;\r\n        Animation2D.scale(this._ImgVar('Hand'), 1, 1, 0, 0, time, delay ? delay : 0, () => {\r\n            func && func();\r\n        });\r\n    }\r\n    bgVanish(delay, func) {\r\n        const time = 300;\r\n        Animation2D.fadeOut(this._ImgVar('Background'), 1, 0, time, delay ? delay : 0, () => {\r\n            func && func();\r\n        });\r\n    }\r\n    handMove(x, y, func, bgType) {\r\n        this.handClear();\r\n        const _y = y - 30;\r\n        const point = new Laya.Point(this._ImgVar('Hand').x, this._ImgVar('Hand').y);\r\n        const time = point.distance(x, _y);\r\n        Animation2D.move(this._ImgVar('Hand'), x, _y, time, () => {\r\n            func && func();\r\n        });\r\n        this._ImgVar('Hand').scale(1, 1);\r\n        Animation2D.move(this._ImgVar('HandPic'), 75, 56, time);\r\n        switch (bgType) {\r\n            case this.bgType.vanish:\r\n                this.bgVanish();\r\n                break;\r\n            case this.bgType.appear:\r\n                this.bgAppear();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    handClear() {\r\n        this.lineStop();\r\n        TimerAdmin._clearAll([this._ImgVar('Hand')]);\r\n        Animation2D._clearAll([this._ImgVar('Hand')]);\r\n        this._AniVar('Frame').stop();\r\n        this._AniVar('Click').stop();\r\n        this._AniVar('ClickOne').stop();\r\n        this._ImgVar('Hand').visible = true;\r\n        this._ImgVar('HandPic').scale(1, 1);\r\n        this._ImgVar('HandPic').rotation = -17;\r\n        this._ImgVar('Hand').pos(this._ImgVar('HandPic')._lwg.gPoint.x - 75, this._ImgVar('HandPic')._lwg.gPoint.y - 56);\r\n        this._ImgVar('HandPic').pos(75, 56);\r\n    }\r\n    slideUpAppear(x, y, width, height, radius, delay) {\r\n        this.bgAppear(delay ? delay : 0, () => {\r\n            this.boreholeRoundrect([[x, y, width, height, radius]], null, null, () => {\r\n                this._ImgVar('Hand').scale(0, 0);\r\n                this._ImgVar('Slide').scale(1, 1);\r\n                this._ImgVar('Slide').pos(x, y);\r\n                this._AniVar('SlideUp').play();\r\n            });\r\n        });\r\n    }\r\n    noMoveRoundrect(x, y, width, height, radius, delay, handX, handY) {\r\n        this.bgAppear(delay ? delay : 0, () => {\r\n            this.boreholeRoundrect([[x, y, width, height, radius]], handX ? handX : x, handY ? handY : y - 30, () => {\r\n                this.handAppear(null, () => {\r\n                    this._AniVar('Click').play();\r\n                });\r\n            });\r\n        });\r\n    }\r\n    moveRoundrectNoBg(x, y, width, height, radius, delay) {\r\n        this.boreholeRoundrect([[x, y, width, height, radius]], null, null, () => {\r\n            this.handMove(x, y, () => {\r\n                this._AniVar('Click').play();\r\n            });\r\n        });\r\n    }\r\n    noMoveCircle(x, y, radius) {\r\n        this.bgAppear(0, () => {\r\n            this.boreholeCircle([[x, y, radius]], x, y, () => {\r\n                this.handAppear(200, () => {\r\n                    this._AniVar('Click').play();\r\n                });\r\n            });\r\n        });\r\n    }\r\n    moveCircleBg(x, y, radius) {\r\n        this.bgAppear(0, () => {\r\n            this.boreholeCircle([[x, y, radius]], null, null, () => {\r\n                this.handMove(x, y, () => {\r\n                    this._AniVar('Click').play();\r\n                });\r\n            });\r\n        });\r\n    }\r\n    moveCircleNoBg(x, y, radius) {\r\n        this.boreholeCircle([[x, y, radius]], null, null, () => {\r\n            this.handMove(x, y, () => {\r\n                this._AniVar('Click').play();\r\n            });\r\n        });\r\n    }\r\n    getGuideScissorTime(x, y) {\r\n        const point = Tools._Node.getNodeGP(this._Scissor);\r\n        return point.distance(x, y);\r\n    }\r\n    scissorTailor(first) {\r\n        if (!this._Scissor || this._closeLine)\r\n            return;\r\n        this._ImgVar('Hand').pos(this._Scissor.x, this._Scissor.y);\r\n        const index = Number(this.presentName.substr(4));\r\n        const pos = this.posArr[index - 1];\r\n        var func = () => {\r\n            this._AniVar('Click').play(0, false);\r\n            Animation2D.move(this._ImgVar('Hand'), pos[0], pos[1], this.getGuideScissorTime(pos[0], pos[1]), () => {\r\n                this._AniVar(this.presentName).play(0, false);\r\n            }, 1500);\r\n        };\r\n        if (first) {\r\n            func();\r\n        }\r\n        else {\r\n            TimerAdmin._loop(6000, this._ImgVar('Hand'), () => {\r\n                this.handAppear(0, () => {\r\n                    func();\r\n                });\r\n            }, true);\r\n        }\r\n    }\r\n    startScissorTailor(Scissor) {\r\n        if (Scissor)\r\n            this._Scissor = Scissor;\r\n        this.presentName = 'Line01';\r\n        this._ImgVar('Hand').scale(1, 1);\r\n        Animation2D.move(this._ImgVar('Hand'), this._Scissor.x, this._Scissor.y, this.getGuideScissorTime(this._ImgVar('Hand').x, this._ImgVar('Hand').y), () => {\r\n            this.scissorTailor(true);\r\n            TimerAdmin._once(5000, this._ImgVar('Hand'), () => {\r\n                this.scissorTailor();\r\n            });\r\n        });\r\n    }\r\n    lineStop() {\r\n        this._AniVar('Line01').stop();\r\n        this._AniVar('Line02').stop();\r\n        this._AniVar('Line03').stop();\r\n        this._AniVar('Line04').stop();\r\n    }\r\n    newScissorTailor(LineName) {\r\n        this.handClear();\r\n        if (this.nameArr.length > 1) {\r\n            for (let index = 0; index < this.nameArr.length; index++) {\r\n                const element = this.nameArr[index];\r\n                if (LineName === element) {\r\n                    this.nameArr.splice(index, 1);\r\n                    break;\r\n                }\r\n            }\r\n            this.presentName = this.nameArr[0];\r\n            this.scissorTailor();\r\n        }\r\n        else {\r\n            this.presentName = null;\r\n            this._ImgVar('Hand').visible = false;\r\n            this._Owner.close();\r\n        }\r\n    }\r\n    pattenAni(ftx, fty, tx, ty) {\r\n        this.handMove(ftx, fty, () => {\r\n            const time = 700;\r\n            const delay = 1000;\r\n            TimerAdmin._loop(time * 3 + delay, this._ImgVar('Hand'), () => {\r\n                this._ImgVar('Hand').scale(1, 1);\r\n                TimerAdmin._once(200, this._ImgVar('Hand'), () => {\r\n                    this._AniVar('ClickOne').play(0, false);\r\n                });\r\n                Animation2D.move(this._ImgVar('Hand'), tx, ty, time, () => {\r\n                    this.handVanish(300, () => {\r\n                        this._ImgVar('Hand').pos(ftx, fty - 30);\r\n                    });\r\n                }, delay);\r\n            }, true);\r\n        });\r\n    }\r\n    lwgEvent() {\r\n        this._AniVar('Click').on(Laya.Event.LABEL, this, (e) => {\r\n            if (e === 'effect') {\r\n                this.clickEffcet();\r\n            }\r\n        });\r\n        this._AniVar('ClickOne').on(Laya.Event.LABEL, this, (e) => {\r\n            if (e === 'effect') {\r\n                this.clickEffcet();\r\n            }\r\n        });\r\n        this._AniVar('Frame').on(Laya.Event.LABEL, this, (e) => {\r\n            if (e === 'effect') {\r\n                this.clickEffcet();\r\n            }\r\n        });\r\n        for (let index = 0; index < 4; index++) {\r\n            const element = this._AniVar(`Line0${index + 1}`);\r\n            element.on(Laya.Event.LABEL, this, (e) => {\r\n                if (e === 'com') {\r\n                    this._ImgVar('Hand').pos(this._Scissor.x, this._Scissor.y);\r\n                    this._ImgVar('Hand').scale(0, 0);\r\n                    this._ImgVar('HandPic').scale(1, 1);\r\n                }\r\n            });\r\n        }\r\n        const radius = 80;\r\n        this._evReg(_GameData._Guide.event.StartBtnDress, (x, y) => {\r\n            this.noMoveCircle(x, y, radius);\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakeTailorPulldown, () => {\r\n            const x = Laya.stage.width - 95;\r\n            const y = Laya.stage.height / 2;\r\n            this.slideUpAppear(x, y, 165, 450, 20);\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakeTailorChangeCloth, () => {\r\n            this._ImgVar('Hand').pos(this._ImgVar('SlideHand')._lwg.gPoint.x, this._ImgVar('SlideHand')._lwg.gPoint.y);\r\n            this._ImgVar('Hand').scale(1, 1);\r\n            this._ImgVar('Slide').scale(0, 0);\r\n            const x = Laya.stage.width - 95;\r\n            const y = 370;\r\n            this.moveCircleNoBg(x, y, radius);\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakeTailorBtnCom, () => {\r\n            this._AniVar('Click').stop();\r\n            this.boreholeCircle([[this.btnComX, this.btnComY, radius], [Laya.stage.width / 2, Laya.stage.height / 2, 350]], null, null, () => {\r\n                this.handMove(this.btnComX, this.btnComY, () => {\r\n                    this._AniVar('Click').play();\r\n                });\r\n            });\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakeTailorStartTailor, (Scissor) => {\r\n            this.bgVanish();\r\n            this.handClear();\r\n            this.startScissorTailor(Scissor);\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakeTailorNewTailor, (LineName) => {\r\n            this.newScissorTailor(LineName);\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakeTailorCloseTailor, () => {\r\n            if (!this.presentName)\r\n                return;\r\n            this._closeLine = true;\r\n            this.handClear();\r\n            this._ImgVar('Hand').scale(0, 0);\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakeTailorOpenTailor, () => {\r\n            if (!this.presentName)\r\n                return;\r\n            this._closeLine = false;\r\n            this.handClear();\r\n            this.scissorTailor();\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakePatternChooseClassify, () => {\r\n            _GameData._Guide.MakePatternState = _GameData._Guide.MakePatternStateType.ChooseClassify;\r\n            const x = Laya.stage.width - 53;\r\n            const y = 270;\r\n            this.noMoveCircle(x, y, 60);\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakePatternPattern1, () => {\r\n            _GameData._Guide.MakePatternState = _GameData._Guide.MakePatternStateType.Pattern1;\r\n            const x = Laya.stage.width - 152;\r\n            const y = 310;\r\n            this.pattenAni(x, y, Laya.stage.width / 2, y);\r\n            this.bgVanish();\r\n        });\r\n        var frameFunc = () => {\r\n            const WConversion = this._Wireframe.getChildByName('WConversion');\r\n            const gP = this._Wireframe.localToGlobal(new Laya.Point(WConversion.x, WConversion.y));\r\n            this.handMove(gP.x, gP.y, () => {\r\n                this._AniVar('Frame').play();\r\n            });\r\n        };\r\n        this._AniVar('Frame').on(Laya.Event.LABEL, this, (label) => {\r\n            if (label === 'com') {\r\n                if (this._Wireframe) {\r\n                    frameFunc();\r\n                }\r\n            }\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakePatternFrame1, (Wireframe) => {\r\n            _GameData._Guide.MakePatternState = _GameData._Guide.MakePatternStateType.Frame1;\r\n            if (Wireframe)\r\n                this._Wireframe = Wireframe;\r\n            frameFunc();\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakePatternTurnFace, (x, y) => {\r\n            _GameData._Guide.MakePatternState = _GameData._Guide.MakePatternStateType.TurnFace;\r\n            this.handClear();\r\n            this.moveCircleBg(x, y, radius);\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakePatternPattern2, () => {\r\n            _GameData._Guide.MakePatternState = _GameData._Guide.MakePatternStateType.Pattern2;\r\n            const x = Laya.stage.width - 152;\r\n            const y = 420;\r\n            this.pattenAni(x, y, Laya.stage.width / 2, y);\r\n            this.bgVanish();\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakePatternFrame2, (Wireframe) => {\r\n            _GameData._Guide.MakePatternState = _GameData._Guide.MakePatternStateType.Frame2;\r\n            if (Wireframe)\r\n                this._Wireframe = Wireframe;\r\n            frameFunc();\r\n        });\r\n        this._evReg(_GameData._Guide.event.MakePatternBtnCom, (x, y) => {\r\n            _GameData._Guide.MakePatternState = _GameData._Guide.MakePatternStateType.BtnCom;\r\n            this.handClear();\r\n            this.moveCircleBg(x, y, radius);\r\n        });\r\n        this._evReg(_GameData._Guide.event.TweetingBtnChoosePhoto, (x, y, handX, handY) => {\r\n            this.noMoveRoundrect(x, y, Laya.stage.width - 320 - 260, 290, 20, 500, handX, handY);\r\n        });\r\n        this._evReg(_GameData._Guide.event.TweetingChoosePhoto, (x, y) => {\r\n            this.noMoveRoundrect(x, y, 260, 260, 20);\r\n        });\r\n        this._evReg(_GameData._Guide.event.TweetingBtnSend, (x, y) => {\r\n            this.moveRoundrectNoBg(x, y, 220, 120, 20);\r\n        });\r\n        this._evReg(_GameData._Guide.event.TweetingBtnDoubleFans, (x, y) => {\r\n            this.noMoveRoundrect(x, y, 230, 120, 20);\r\n        });\r\n        this._evReg(_GameData._Guide.event.RankingCloseBtn, (x, y) => {\r\n            this.noMoveCircle(x, y, radius);\r\n        });\r\n        this._evReg(_GameData._Guide.event.PersonalInfoBtn, (x, y) => {\r\n            this.noMoveCircle(x, y, radius);\r\n        });\r\n        this._evReg(_GameData._Guide.event.PersonalInfoWriteName, (x, y) => {\r\n            this.noMoveCircle(x, y, radius);\r\n        });\r\n        this._evReg(_GameData._Guide.event.PersonalInfoCloseBtn, (x, y) => {\r\n            this.noMoveCircle(x, y, radius);\r\n        });\r\n        this._evReg(_GameData._Guide.event.BtnCheckIn, (x, y) => {\r\n            this.noMoveCircle(x, y, radius);\r\n        });\r\n        this._evReg(_GameData._Guide.event.CheckInGetReward, (x, y) => {\r\n            this.noMoveCircle(x, y, radius);\r\n        });\r\n        this._evReg(_GameData._Guide.event.CheckInCloseBtn, (x, y) => {\r\n            this.moveCircleBg(x, y, radius);\r\n        });\r\n        this._evReg(_GameData._Guide.event.vanishGuide, () => {\r\n            this._AniVar('Click').stop();\r\n            this.handVanish();\r\n            this.bgVanish();\r\n        });\r\n        this._evReg(_GameData._Guide.event.closeGuide, () => {\r\n            this._closeScene();\r\n        });\r\n    }\r\n    lwgCloseAni() {\r\n        return _GameAni._dialogCloseFadeOut(this._ImgVar('Hand'), this._ImgVar('Background'));\r\n    }\r\n    lwgOnDisable() {\r\n        this._ImgVar('Background').destroy();\r\n    }\r\n}\r\n",
  "references": [
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/Lwg.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Game/_GameAni.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Game/_GameData.ts"
  ]
}
