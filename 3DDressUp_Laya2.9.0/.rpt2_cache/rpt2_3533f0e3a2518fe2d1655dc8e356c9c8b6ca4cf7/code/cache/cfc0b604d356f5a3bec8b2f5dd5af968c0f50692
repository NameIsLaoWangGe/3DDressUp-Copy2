{
  "code": "import ADManager, { TaT } from \"../../TJ/Admanager\";\r\nimport { Admin, Animation2D, Animation3D, DataAdmin, Dialogue, StorageAdmin, TimerAdmin, Tools } from \"./Lwg\";\r\nimport { LwgOPPO } from \"./LwgOPPO\";\r\nimport { _3D } from \"./_3D\";\r\nimport { _GameData } from \"./_GameData\";\r\nimport { _Res } from \"./_Res\";\r\nimport { _Start } from \"./_Start\";\r\nimport { _UI } from \"./_UI\";\r\nexport var _MakePattern;\r\n(function (_MakePattern) {\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"close\"] = \"_MakePattern_close\";\r\n        _Event[\"createImg\"] = \"_MakePattern_createImg\";\r\n    })(_Event = _MakePattern._Event || (_MakePattern._Event = {}));\r\n    class _Item extends DataAdmin._Item {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.diffX = 0;\r\n            this.create = false;\r\n        }\r\n        $button() {\r\n            this._btnFour(this._ImgChild('Icon'), (e) => {\r\n                if (!this.$complete) {\r\n                    switch (this.$unlockWay) {\r\n                        case _GameData._Pattern._ins()._unlockWay.check:\r\n                            Dialogue.createHint_Middle('请前往签到页面获取');\r\n                            break;\r\n                        case _GameData._Pattern._ins()._unlockWay.customs:\r\n                            Dialogue.createHint_Middle(`制作${this.$conditionNum}件衣服才能获取！`);\r\n                            break;\r\n                        case _GameData._Pattern._ins()._unlockWay.ads:\r\n                            ADManager.ShowReward(() => {\r\n                                if (_GameData._Pattern._ins()._checkCondition(this.$name)) {\r\n                                    Dialogue.createHint_Middle('恭喜获得新贴图！');\r\n                                    _GameData._Pattern._ins()._setProperty(this.$name, _GameData._Pattern._ins()._property.$complete, true);\r\n                                }\r\n                            });\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                if (this.$name === 'ads' || !this.$name || !this.$complete) {\r\n                    this['Cancal'] = true;\r\n                    return;\r\n                }\r\n                else {\r\n                    this['Cancal'] = false;\r\n                }\r\n                this.create = false;\r\n                this.diffX = 0;\r\n                this.fX = e.stageX;\r\n                this._evNotify(_Event.close);\r\n            }, (e) => {\r\n                if (this['Cancal']) {\r\n                    return;\r\n                }\r\n                if (!this.create) {\r\n                    this.diffX = this.fX - e.stageX;\r\n                    if (this.diffX >= 5) {\r\n                        this._evNotify(_Event.createImg, [this.$name, this._gPoint]);\r\n                        this.create = true;\r\n                    }\r\n                }\r\n            }, () => {\r\n                if (this['Cancal']) {\r\n                    return;\r\n                }\r\n                this.create = true;\r\n                this._evNotify(_Event.close);\r\n            }, () => {\r\n                if (this['Cancal']) {\r\n                    return;\r\n                }\r\n                this.create = true;\r\n            });\r\n        }\r\n        $render() {\r\n            if (this.$name === 'ads') {\r\n                !this._BoxChild('NativeRoot') && Tools._Node.createPrefab(_Res._list.prefab2D.NativeRoot.prefab, this._Owner);\r\n                this._LableChild('Mask').visible = this._LableChild('UnlockWay').visible = this._ImgChild('AdsSign').visible = this._ImgChild('Icon').visible = false;\r\n            }\r\n            else {\r\n                if (!this.$complete) {\r\n                    if (this.$unlockWay === _GameData._Pattern._ins()._unlockWay.ads) {\r\n                        this._ImgChild('AdsSign').visible = true;\r\n                        this._LableChild('UnlockWay').visible = false;\r\n                    }\r\n                    else {\r\n                        this._LableChild('AdsSign').visible = false;\r\n                        this._LableChild('UnlockWay').visible = true;\r\n                        switch (this.$unlockWay) {\r\n                            case _GameData._Pattern._ins()._unlockWay.check:\r\n                                this._LableChild('UnlockWay').text = '签到';\r\n                                this._LableChild('UnlockWay').fontSize = 30;\r\n                                break;\r\n                            case _GameData._Pattern._ins()._unlockWay.customs:\r\n                                this._LableChild('UnlockWay').text = `制作衣服 (${_GameData._Tweeting._ins()._completeNum} /${this.$conditionNum})`;\r\n                                this._LableChild('UnlockWay').fontSize = 25;\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                    this._LableChild('Mask').visible = true;\r\n                }\r\n                else {\r\n                    this._LableChild('Mask').visible = this._ImgChild('AdsSign').visible = this._LableChild('UnlockWay').visible = false;\r\n                }\r\n                this._ImgChild('Icon').visible = true;\r\n                this._ImgChild('Icon').gray = !this.$complete;\r\n                if (this._BoxChild('NativeRoot'))\r\n                    this._BoxChild('NativeRoot').destroy();\r\n                if (this.$name) {\r\n                    this._ImgChild('Icon').skin = `Pattern/${this.$name}.png`;\r\n                }\r\n                else {\r\n                    this._LableChild('Mask').visible = this._LableChild('UnlockWay').visible = this._ImgChild('AdsSign').visible = this._ImgChild('Icon').visible = false;\r\n                    this._ImgChild('Icon').skin = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _MakePattern._Item = _Item;\r\n    class MakePattern extends Admin._SceneBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.Tex = {\r\n                Img: null,\r\n                DisImg: null,\r\n                imgSize: [128, 128],\r\n                wireframeSize: [120, 150],\r\n                touchP: null,\r\n                diffP: null,\r\n                dir: 'Front',\r\n                dirType: {\r\n                    Front: 'Front',\r\n                    Reverse: 'Reverse',\r\n                },\r\n                state: 'none',\r\n                stateType: {\r\n                    none: 'none',\r\n                    move: 'move',\r\n                    scale: 'scale',\r\n                    rotate: 'rotate',\r\n                    addTex: 'addTex',\r\n                },\r\n                zOderindex: 0,\r\n                createImg: (name, gPoint) => {\r\n                    this.Tex.DisImg && this.Tex.DisImg.destroy();\r\n                    this.Tex.DisImg = new Laya.Image;\r\n                    this.Tex.Img = new Laya.Image;\r\n                    let lPoint = this._SpriteVar('Ultimately').globalToLocal(gPoint);\r\n                    this.Tex.Img.skin = this.Tex.DisImg.skin = `Pattern/${name}.png`;\r\n                    this.Tex.Img.x = this.Tex.DisImg.x = lPoint.x;\r\n                    this.Tex.Img.y = this.Tex.DisImg.y = lPoint.y;\r\n                    this.Tex.Img.name = name;\r\n                    this.Tex.Img.width = this.Tex.DisImg.width = this.Tex.imgSize[0];\r\n                    this.Tex.Img.height = this.Tex.DisImg.height = this.Tex.imgSize[1];\r\n                    this.Tex.Img.anchorX = this.Tex.Img.anchorY = this.Tex.DisImg.anchorX = this.Tex.DisImg.anchorY = 0.5;\r\n                    this._SpriteVar('Dispaly').addChild(this.Tex.DisImg);\r\n                    this._SpriteVar('Dispaly').visible = true;\r\n                    this.Tex.zOderindex++;\r\n                    this.Tex.Img.zOrder = this.Tex.zOderindex;\r\n                },\r\n                getTex: () => {\r\n                    let ImgF = this._ImgVar(this.Tex.dirType.Front);\r\n                    let ImgR = this._ImgVar(this.Tex.dirType.Reverse);\r\n                    let arr = [\r\n                        ImgF.drawToTexture(ImgF.width, ImgF.height, ImgF.x, ImgF.y + ImgF.height),\r\n                        ImgR.drawToTexture(ImgR.width, ImgR.height, ImgR.x, ImgR.y + ImgR.height)\r\n                    ];\r\n                    return arr;\r\n                },\r\n                fDiffX: 0,\r\n                fDiffY: 0,\r\n                rDiffX: 0,\r\n                rDiffY: 0,\r\n                setImgPos: () => {\r\n                    let posArr = this.Tex.setPosArr();\r\n                    let indexArr = [];\r\n                    let outArr = [];\r\n                    for (let index = 0; index < posArr.length; index++) {\r\n                        const out = Tools._3D.rayScanning(_3D._Scene._ins()._MainCamara, _3D._Scene._ins()._Owner, new Laya.Vector2(posArr[index].x, posArr[index].y), 'model');\r\n                        if (out) {\r\n                            outArr.push(out);\r\n                            indexArr.push(posArr[index]);\r\n                        }\r\n                    }\r\n                    if (indexArr.length !== 0) {\r\n                        const out = outArr[outArr.length - 1];\r\n                        this._SpriteVar(this.Tex.dir).addChild(this.Tex.Img);\r\n                        let _width = this._ImgVar(this.Tex.dir).width;\r\n                        let _height = this._ImgVar(this.Tex.dir).height;\r\n                        let angleXZ = Tools._Point.pointByAngle(_3D.DIYCloth._ins().ModelTap.transform.position.x - out.point.x, _3D.DIYCloth._ins().ModelTap.transform.position.z - out.point.z);\r\n                        if (this.Tex.dir == this.Tex.dirType.Front) {\r\n                            this.Tex.Img.x = _width - _width / 180 * (angleXZ + 90);\r\n                        }\r\n                        else {\r\n                            this.Tex.Img.x = -_width / 180 * (angleXZ - 90);\r\n                        }\r\n                        let pH = out.point.y - _3D.DIYCloth._ins().ModelTap.transform.position.y;\r\n                        let _DirHeight = Tools._3D.getMeshSize(this.Tex.dir === this.Tex.dirType.Front ? _3D.DIYCloth._ins().Front : _3D.DIYCloth._ins().Reverse).y;\r\n                        let ratio = 1 - pH / _DirHeight;\r\n                        this.Tex.Img.y = ratio * _height;\r\n                        if (this.Tex.dir === this.Tex.dirType.Front) {\r\n                            this.Tex.Img.x += this.Tex.fDiffX;\r\n                            this.Tex.Img.y += this.Tex.fDiffY;\r\n                        }\r\n                        else {\r\n                            this.Tex.Img.x += this.Tex.rDiffX;\r\n                            this.Tex.Img.y += this.Tex.rDiffY;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                },\r\n                setPosArr: () => {\r\n                    let x = this._ImgVar('Wireframe').x;\r\n                    let y = this._ImgVar('Wireframe').y;\r\n                    let _width = this._ImgVar('Wireframe').width;\r\n                    let _height = this._ImgVar('Wireframe').height;\r\n                    return [\r\n                        new Laya.Point(x, y),\r\n                    ];\r\n                },\r\n                checkInside: () => {\r\n                    let posArr = this.Tex.setPosArr();\r\n                    let bool = false;\r\n                    for (let index = 0; index < posArr.length; index++) {\r\n                        const _out = Tools._3D.rayScanning(_3D._Scene._ins()._MainCamara, _3D._Scene._ins()._Owner, new Laya.Vector2(posArr[index].x, posArr[index].y), 'model');\r\n                        if (_out) {\r\n                            bool = true;\r\n                        }\r\n                    }\r\n                    return bool;\r\n                },\r\n                getDisGP: () => {\r\n                    return this.Tex.DisImg ? this._SpriteVar('Dispaly').localToGlobal(new Laya.Point(this.Tex.DisImg.x, this.Tex.DisImg.y)) : null;\r\n                },\r\n                disMove: () => {\r\n                    this.Tex.DisImg.x += this.Tex.diffP.x;\r\n                    this.Tex.DisImg.y += this.Tex.diffP.y;\r\n                    let gPoint = this.Tex.getDisGP();\r\n                    this._ImgVar('Wireframe').pos(gPoint.x, gPoint.y);\r\n                },\r\n                move: (e) => {\r\n                    this.Tex.disMove();\r\n                    this._ImgVar('Wireframe').visible = false;\r\n                    if (this.Tex.checkInside()) {\r\n                        this.Tex.setImgPos();\r\n                        this._ImgVar('Wireframe').visible = true;\r\n                        this.Tex.state = this.Tex.stateType.addTex;\r\n                        this._SpriteVar('Dispaly').visible = false;\r\n                    }\r\n                },\r\n                addTex: (e) => {\r\n                    this.Tex.disMove();\r\n                    let out = this.Tex.setImgPos();\r\n                    if (!out) {\r\n                        this._ImgVar('Wireframe').visible = false;\r\n                        this.Tex.state = this.Tex.stateType.move;\r\n                        this.Tex.Img.x = Laya.stage.width;\r\n                        this._SpriteVar('Dispaly').visible = true;\r\n                    }\r\n                    _3D.DIYCloth._ins().addTexture2D(this.Tex.getTex());\r\n                },\r\n                scale: (e) => {\r\n                    if (!this.Tex.Img) {\r\n                        return;\r\n                    }\r\n                    const lPoint = this._ImgVar('Wireframe').globalToLocal(new Laya.Point(e.stageX, e.stageY));\r\n                    this._ImgVar('Wireframe').width = this._ImgVar('WConversion').x = lPoint.x;\r\n                    this._ImgVar('Wireframe').height = this._ImgVar('WConversion').y = lPoint.y;\r\n                    const gPoint = this._Owner.localToGlobal(new Laya.Point(this._ImgVar('Wireframe').x, this._ImgVar('Wireframe').y));\r\n                    this.Tex.Img.rotation = this.Tex.DisImg.rotation = this._ImgVar('Wireframe').rotation = Tools._Point.pointByAngle(e.stageX - gPoint.x, e.stageY - gPoint.y) + 45;\r\n                    const scaleWidth = this._ImgVar('Wireframe').width - this.Tex.wireframeSize[0];\r\n                    const scaleheight = this._ImgVar('Wireframe').height - this.Tex.wireframeSize[1];\r\n                    this.Tex.DisImg.width = this.Tex.Img.width = this.Tex.imgSize[0] + scaleWidth;\r\n                    this.Tex.DisImg.height = this.Tex.Img.height = this.Tex.imgSize[1] + scaleheight;\r\n                    _3D.DIYCloth._ins().addTexture2D(this.Tex.getTex());\r\n                },\r\n                rotate: (e) => {\r\n                    if (!_GameData._Guide._complete)\r\n                        return;\r\n                    if (this.Tex.diffP.x > 0) {\r\n                        _3D.DIYCloth._ins().rotate(1);\r\n                    }\r\n                    else {\r\n                        _3D.DIYCloth._ins().rotate(0);\r\n                    }\r\n                },\r\n                again: () => {\r\n                    Tools._Node.removeAllChildren(this._SpriteVar('Front'));\r\n                    Tools._Node.removeAllChildren(this._SpriteVar('Reverse'));\r\n                    this.Tex.turnFace();\r\n                    _3D.DIYCloth._ins().addTexture2D(this.Tex.getTex());\r\n                },\r\n                none: () => {\r\n                    return;\r\n                },\r\n                operation: (e) => {\r\n                    if (this.Tex.touchP) {\r\n                        this.Tex.diffP = new Laya.Point(e.stageX - this.Tex.touchP.x, e.stageY - this.Tex.touchP.y);\r\n                        this.Tex[this.Tex.state](e);\r\n                        this.Tex.touchP = new Laya.Point(e.stageX, e.stageY);\r\n                    }\r\n                },\r\n                frameRestore: () => {\r\n                    this._ImgVar('Wireframe').rotation = 0;\r\n                    this._ImgVar('Wireframe').visible = false;\r\n                    this._ImgVar('Wireframe').width = this.Tex.wireframeSize[0];\r\n                    this._ImgVar('Wireframe').height = this.Tex.wireframeSize[1];\r\n                    this._ImgVar('WConversion').x = this._ImgVar('Wireframe').width;\r\n                    this._ImgVar('WConversion').y = this._ImgVar('Wireframe').height;\r\n                    this.Tex.Img = null;\r\n                },\r\n                close: () => {\r\n                    this.Tex.frameRestore();\r\n                    this.Tex.DisImg && this.Tex.DisImg.destroy();\r\n                    this.Tex.Img = null;\r\n                    this.Tex.Img && this.Tex.Img.destroy();\r\n                    this.Tex.Img = null;\r\n                    this.Tex.state = this.Tex.stateType.none;\r\n                    this.Tex.touchP = null;\r\n                    _3D.DIYCloth._ins().addTexture2D(this.Tex.getTex());\r\n                },\r\n                turnFace: (func) => {\r\n                    let time;\r\n                    let angle;\r\n                    if (this.Tex.dir == this.Tex.dirType.Front) {\r\n                        time = Math.abs(_3D.DIYCloth._ins().Present.transform.localRotationEulerY - 180) * 2;\r\n                        angle = 180;\r\n                    }\r\n                    else {\r\n                        time = Math.abs(_3D.DIYCloth._ins().Present.transform.localRotationEulerY) * 2;\r\n                        angle = 0;\r\n                    }\r\n                    Animation3D.rotateTo(_3D.DIYCloth._ins().Present, new Laya.Vector3(0, angle, 0), time, this, null, () => {\r\n                        func && func();\r\n                    });\r\n                },\r\n                btn: () => {\r\n                    this._btnFour(this._ImgVar('WConversion'), (e) => {\r\n                        e.stopPropagation();\r\n                        this.Tex.state = this.Tex.stateType.scale;\r\n                    }, null, (e) => {\r\n                        e.stopPropagation();\r\n                        this.Tex.state = this.Tex.stateType.addTex;\r\n                        if (!_GameData._Guide._complete) {\r\n                            if (_GameData._Guide.MakePatternState === _GameData._Guide.MakePatternStateType.Frame1) {\r\n                                this._evNotify(_GameData._Guide.event.MakePatternTurnFace, [this._ImgVar('BtnTurnFace')._lwg.gPoint.x, this._ImgVar('BtnTurnFace')._lwg.gPoint.y]);\r\n                            }\r\n                            else if (_GameData._Guide.MakePatternState === _GameData._Guide.MakePatternStateType.Frame2) {\r\n                                this._evNotify(_GameData._Guide.event.MakePatternBtnCom, [this._ImgVar('BtnComplete')._lwg.gPoint.x, this._ImgVar('BtnComplete')._lwg.gPoint.y]);\r\n                            }\r\n                        }\r\n                    });\r\n                    this._btnUp(this._ImgVar('BtnTurnFace'), (e) => {\r\n                        if (!_GameData._Guide._complete) {\r\n                            if (_GameData._Guide.MakePatternState === _GameData._Guide.MakePatternStateType.TurnFace) {\r\n                                this._evNotify(_GameData._Guide.event.MakePatternPattern2);\r\n                            }\r\n                            else {\r\n                                return;\r\n                            }\r\n                        }\r\n                        e.stopPropagation();\r\n                        this.Tex.frameRestore();\r\n                        if (this.Tex.dir === this.Tex.dirType.Front) {\r\n                            this.Tex.dir = this.Tex.dirType.Reverse;\r\n                            this._ImgVar('BtnTurnFace').skin = 'Game/UI/MakePattern/fan.png';\r\n                            ADManager.TAPoint(TaT.BtnClick, 'Amian');\r\n                        }\r\n                        else {\r\n                            this.Tex.dir = this.Tex.dirType.Front;\r\n                            this._ImgVar('BtnTurnFace').skin = 'Game/UI/MakePattern/zheng.png';\r\n                            ADManager.TAPoint(TaT.BtnClick, 'Bmian');\r\n                        }\r\n                        this.Tex.turnFace();\r\n                        this._ImgVar('Wireframe').visible = false;\r\n                        this.Tex.state = this.Tex.stateType.rotate;\r\n                    });\r\n                    if (!_GameData._Guide._complete)\r\n                        return;\r\n                    this._btnUp(this._ImgVar('WClose'), (e) => {\r\n                        e.stopPropagation();\r\n                        this.Tex.close();\r\n                    });\r\n                    this._btnFour(this._ImgVar('BtnL'), (e) => {\r\n                        this.Tex.frameRestore();\r\n                        this.Tex.state = this.Tex.stateType.rotate;\r\n                        TimerAdmin._frameLoop(1, this._ImgVar('BtnL'), () => {\r\n                            _3D.DIYCloth._ins().rotate(0);\r\n                        });\r\n                    }, null, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnL'));\r\n                    }, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnL'));\r\n                    });\r\n                    this._btnFour(this._ImgVar('BtnR'), (e) => {\r\n                        this.Tex.frameRestore();\r\n                        this.Tex.state = this.Tex.stateType.rotate;\r\n                        TimerAdmin._frameLoop(1, this._ImgVar('BtnR'), () => {\r\n                            _3D.DIYCloth._ins().rotate(1);\r\n                        });\r\n                    }, null, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnR'));\r\n                    }, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnR'));\r\n                    });\r\n                }\r\n            };\r\n        }\r\n        lwgOnAwake() {\r\n            ADManager.TAPoint(TaT.PageShow, 'tiehuapage');\r\n            ADManager.TAPoint(TaT.LevelStart, `level_${_3D.DIYCloth._ins().Present.name}`);\r\n            _GameData._Pattern._ins()._List = this._ListVar('List');\r\n            if (_GameData._Pattern._ins()._getProperty('newYear1', _GameData._Pattern._ins()._property.$complete) || !_GameData._Guide._complete) {\r\n                this.switchClassify('newYear');\r\n                _GameData._Pattern._ins()._listArray = _GameData._Pattern._ins().newYearArr;\r\n            }\r\n            else {\r\n                this.switchClassify('basic');\r\n                _GameData._Pattern._ins()._listArray = _GameData._Pattern._ins().basicArr;\r\n            }\r\n            _GameData._Pattern._ins()._List.scrollBar.touchScrollEnable = false;\r\n            _GameData._Pattern._ins()._listRenderScript = _Item;\r\n            this.Tex.fDiffX = _GameData._PatternDiff._ins().fDiffX;\r\n            this.Tex.fDiffY = _GameData._PatternDiff._ins().fDiffY;\r\n            this.Tex.rDiffX = _GameData._PatternDiff._ins().rDiffX;\r\n            this.Tex.rDiffY = _GameData._PatternDiff._ins().rDiffY;\r\n        }\r\n        lwgOpenAniAfter() {\r\n            TimerAdmin._frameOnce(60, this, () => {\r\n                !_GameData._Guide._complete && this._openScene('Guide', false, false, () => {\r\n                    this._evNotify(_GameData._Guide.event.MakePatternChooseClassify);\r\n                });\r\n            });\r\n        }\r\n        lwgAdaptive() {\r\n            this._adaWidth([this._ImgVar('BtnR'), this._ImgVar('BtnL')]);\r\n        }\r\n        lwgOnStart() {\r\n            const url = _GameData._DIYClothes._ins().getPitchTexBasicUrl();\r\n            this._ImgVar('Front').loadImage(url, Laya.Handler.create(this, () => {\r\n                this._ImgVar('Reverse').loadImage(url, Laya.Handler.create(this, () => {\r\n                    _3D.DIYCloth._ins().addTexture2D(this.Tex.getTex());\r\n                }));\r\n            }));\r\n            Animation2D.fadeOut(this._ImgVar('BtnL'), 0, 1, 200, 200);\r\n            Animation2D.fadeOut(this._ImgVar('BtnR'), 0, 1, 200, 200);\r\n            this.UI = new _UI(this._Owner);\r\n            this.UI.BtnAgain.pos(86, 630);\r\n            TimerAdmin._frameOnce(10, this, () => {\r\n                this.UI.operationAppear(() => {\r\n                    this.UI.btnCompleteAppear(null, 400);\r\n                    this.UI.btnTurnFaceAppear(null, 200);\r\n                });\r\n                this.UI.btnBackAppear(null, 200);\r\n                this.UI.btnRollbackAppear(null, 600);\r\n                this.UI.btnAgainAppear(null, 800);\r\n            });\r\n            this._SpriteVar('Front').y = this._ImgVar('Reverse').y = this._SpriteVar('Front').height = this._ImgVar('Reverse').height = _3D.DIYCloth._ins().texHeight;\r\n        }\r\n        switchClassify(_name) {\r\n            if (!_GameData._Guide._complete && _name !== 'basic') {\r\n                return;\r\n            }\r\n            for (let index = 0; index < this._ImgVar('Part').numChildren; index++) {\r\n                const element = this._ImgVar('Part').getChildAt(index);\r\n                const name = element.getChildAt(0);\r\n                if (_name === element.name) {\r\n                    if (!_GameData._Guide._complete) {\r\n                        if (_GameData._Guide.MakePatternState === _GameData._Guide.MakePatternStateType.ChooseClassify) {\r\n                            this._evNotify(_GameData._Guide.event.MakePatternPattern1);\r\n                        }\r\n                    }\r\n                    element.scale(1.1, 1.1);\r\n                    _GameData._Pattern._ins()._listArray = _GameData._Pattern._ins()[`${element.name}Arr`];\r\n                    _GameData._Pattern._ins()._pitchClassify = element.name;\r\n                    element.skin = `Game/UI/Common/kuang_fen.png`;\r\n                    name.color = '#fdfff4';\r\n                    name.stroke = 5;\r\n                }\r\n                else {\r\n                    element.skin = `Game/UI/Common/kuang_bai.png`;\r\n                    element.scale(1, 1);\r\n                    name.color = '#a84f47';\r\n                    name.stroke = 0;\r\n                }\r\n            }\r\n        }\r\n        lwgButton() {\r\n            for (let index = 0; index < this._ImgVar('Part').numChildren; index++) {\r\n                const _element = this._ImgVar('Part').getChildAt(index);\r\n                this._btnUp(_element, () => {\r\n                    this.switchClassify(_element.name);\r\n                }, 'no');\r\n            }\r\n            this.Tex.btn();\r\n            this.UI.btnCompleteClick = () => {\r\n                if (!_GameData._Guide._complete) {\r\n                    if (_GameData._Guide.MakePatternState === _GameData._Guide.MakePatternStateType.BtnCom) {\r\n                        this._evNotify(_GameData._Guide.event.closeGuide);\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                }\r\n                this.Tex.frameRestore();\r\n                this.Tex.dir = this.Tex.dirType.Front;\r\n                this.Tex.turnFace(() => {\r\n                    _3D._Scene._ins().cameraToSprite(this._Owner);\r\n                    TimerAdmin._frameOnce(5, this, () => {\r\n                        _GameData._Tweeting._ins()._photo.take(this._Owner, 1);\r\n                    });\r\n                    this.texStorage();\r\n                    Animation2D.fadeOut(this._ImgVar('BtnL'), 1, 0, 200);\r\n                    Animation2D.fadeOut(this._ImgVar('BtnR'), 1, 0, 200);\r\n                    this.UI.operationVinish(() => {\r\n                        this.UI.btnBackVinish(null, 200);\r\n                        this.UI.btnBackVinish();\r\n                        this.UI.btnRollbackVinish();\r\n                        this.UI.btnAgainVinish(() => {\r\n                        });\r\n                        var close = () => {\r\n                            _3D._Scene._ins().cameraToSprite(this._Owner);\r\n                            _Start._whereFrom = 'MakePattern';\r\n                            this._openScene('Start', true, true);\r\n                        };\r\n                        if (TJ.API.AppInfo.Channel() == TJ.Define.Channel.AppRt.OPPO_AppRt) {\r\n                            LwgOPPO._screenShootByRatio((data) => {\r\n                                LwgOPPO._picSave(data['tempFilePath'], _3D.DIYCloth._ins().name);\r\n                                close();\r\n                            }, 0.28, null, 0.72, null, null, 0.1);\r\n                        }\r\n                        else {\r\n                            close();\r\n                        }\r\n                    }, 200);\r\n                });\r\n            };\r\n            if (!_GameData._Guide._complete)\r\n                return;\r\n            this.UI.btnRollbackClick = () => {\r\n                _3D._Scene._ins().cameraToSprite(this._Owner);\r\n                this._openScene('MakeTailor', true, true);\r\n            };\r\n            this.UI.btnAgainClick = () => {\r\n                this.Tex.again();\r\n            };\r\n        }\r\n        lwgEvent() {\r\n            this._evReg(_Event.createImg, (name, gPoint) => {\r\n                this.Tex.state = this.Tex.stateType.move;\r\n                this.Tex.createImg(name, gPoint);\r\n                this.Tex.turnFace();\r\n            });\r\n            this._evReg(_Event.close, () => {\r\n                if (!_GameData._Guide._complete)\r\n                    return;\r\n                this.Tex.close();\r\n                this.Tex.state = this.Tex.stateType.none;\r\n            });\r\n        }\r\n        texStorage() {\r\n            const fArr = [];\r\n            var obj = (element) => {\r\n                return {\r\n                    name: element.name,\r\n                    x: element.x,\r\n                    y: element.y,\r\n                    width: element.width,\r\n                    height: element.height,\r\n                    rotation: element.rotation,\r\n                    anchorX: element.anchorX,\r\n                    anchorY: element.anchorY,\r\n                    zOrder: element.zOrder,\r\n                };\r\n            };\r\n            for (let index = 0; index < this._SpriteVar('Front').numChildren; index++) {\r\n                if (index > 20) {\r\n                    break;\r\n                }\r\n                const element = this._SpriteVar('Front').getChildAt(index);\r\n                fArr.push(obj(element));\r\n            }\r\n            const rArr = [];\r\n            for (let index = 0; index < this._SpriteVar('Reverse').numChildren; index++) {\r\n                if (index < 20) {\r\n                    break;\r\n                }\r\n                const element = this._SpriteVar('Reverse').getChildAt(index);\r\n                rArr.push(obj(element));\r\n            }\r\n            StorageAdmin._array(`${_3D.DIYCloth._ins().name}/${_GameData._DIYClothes._ins()._otherPro.texF}`).value = fArr;\r\n            StorageAdmin._array(`${_3D.DIYCloth._ins().name}/${_GameData._DIYClothes._ins()._otherPro.texR}`).value = rArr;\r\n            _GameData._Ranking._ins()._whereFrom = this._Owner.name;\r\n        }\r\n        onStageMouseDown(e) {\r\n            this.Tex.touchP = new Laya.Point(e.stageX, e.stageY);\r\n            if (e.stageX > Laya.stage.width - this.UI.Operation.width) {\r\n                this['slideFY'] = e.stageY;\r\n            }\r\n            else {\r\n                if (!_GameData._Guide._complete) {\r\n                    return;\r\n                }\r\n                const point = new Laya.Point(e.stageX, e.stageY);\r\n                if (point.distance(this._ImgVar('Wireframe').x, this._ImgVar('Wireframe').y) > this._ImgVar('Wireframe').width / 2 + 50) {\r\n                    this._ImgVar('Wireframe').visible = false;\r\n                }\r\n                else {\r\n                    if (!this.Tex.Img) {\r\n                        this._ImgVar('Wireframe').visible = false;\r\n                    }\r\n                    else {\r\n                        this._ImgVar('Wireframe').visible = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        onStageMouseMove(e) {\r\n            this.Tex.operation(e);\r\n            if (e.stageX > Laya.stage.width - this.UI.Operation.width) {\r\n                if (!_GameData._Guide._complete)\r\n                    return;\r\n                if (this['slideFY']) {\r\n                    let diffY = this['slideFY'] - e.stageY;\r\n                    let index = _GameData._Pattern._ins()._List.startIndex;\r\n                    if (Math.abs(diffY) > 25) {\r\n                        if (diffY > 0) {\r\n                            _GameData._Pattern._ins()._List.tweenTo(index + 1, 100);\r\n                        }\r\n                        if (diffY < 0) {\r\n                            _GameData._Pattern._ins()._List.tweenTo(index - 1, 100);\r\n                        }\r\n                        this['slideFY'] = null;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this['slideFY'] = null;\r\n            }\r\n        }\r\n        onStageMouseUp(e) {\r\n            this['slideFY'] = null;\r\n            if (e.stageX > Laya.stage.width - this.UI.Operation.width) {\r\n                this._evNotify(_Event.close);\r\n            }\r\n            else {\r\n                if (!this.Tex.checkInside()) {\r\n                    this.Tex.close();\r\n                }\r\n                else {\r\n                    if (!_GameData._Guide._complete) {\r\n                        if (_GameData._Guide.MakePatternState === _GameData._Guide.MakePatternStateType.Pattern1) {\r\n                            this._evNotify(_GameData._Guide.event.MakePatternFrame1, [this._ImgVar('Wireframe')]);\r\n                        }\r\n                        else if (_GameData._Guide.MakePatternState === _GameData._Guide.MakePatternStateType.Pattern2) {\r\n                            this._evNotify(_GameData._Guide.event.MakePatternFrame2, [this._ImgVar('Wireframe')]);\r\n                        }\r\n                    }\r\n                    ;\r\n                }\r\n            }\r\n        }\r\n        lwgOnDisable() {\r\n            ADManager.TAPoint(TaT.PageLeave, 'tiehuapage');\r\n            ADManager.TAPoint(TaT.LevelFinish, `level_${_3D.DIYCloth._ins().Present.name}`);\r\n        }\r\n    }\r\n    _MakePattern.MakePattern = MakePattern;\r\n})(_MakePattern || (_MakePattern = {}));\r\nexport default _MakePattern.MakePattern;\r\n",
  "references": [
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/TJ/Admanager.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/Lwg.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/LwgOPPO.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/_3D.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/_Game.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/_GameAni.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/_GameData.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/_GameEvent.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/_Guide.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/_MakeUp.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/_Ranking.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/_Res.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/_Start.ts",
    "D:/Game/project/3DDressUp/Copy2/3DDressUp_Laya2.9.0/src/script/Lwg/_UI.ts"
  ]
}
