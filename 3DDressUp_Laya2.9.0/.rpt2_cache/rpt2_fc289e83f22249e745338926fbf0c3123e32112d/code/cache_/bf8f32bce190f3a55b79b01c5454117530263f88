{
  "code": "import { DataAdmin, StorageAdmin, TimerAdmin, Tools } from \"./Lwg\";\r\nimport { _3D } from \"./_3D\";\r\nimport { _Res } from \"./_Res\";\r\nexport var _GameData;\r\n(function (_GameData) {\r\n    class _AllClothes extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._classify = {\r\n                DIY: 'DIY',\r\n                General: 'General',\r\n            };\r\n            this._part = {\r\n                Dress: 'Dress',\r\n                Top: 'Top',\r\n                Bottoms: 'Bottoms',\r\n                FaceMask: 'FaceMask',\r\n                Accessories: 'Accessories',\r\n                Shoes: 'Shoes',\r\n                Hair: 'Hair',\r\n            };\r\n            this._otherPro = {\r\n                putOn: 'putOn',\r\n                part: 'part'\r\n            };\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _AllClothes('ClothesGeneral', _Res._list.json.GeneralClothes.dataArr, true);\r\n            }\r\n            return this.ins;\r\n        }\r\n        getDIYTexBasicUrl(clothesName) {\r\n            return `https://h5.tomatojoy.cn/res/ark/3d04671eec61b1e12a6c02e54c1e7320/1.0.0/3DDressUp/DIYTexbasic/${clothesName.substr(0, clothesName.length - 5)}basic.png`;\r\n        }\r\n        getGeneralIcon(clothesName) {\r\n            return `https://h5.tomatojoy.cn/res/ark/3d04671eec61b1e12a6c02e54c1e7320/1.0.0/3DDressUp/Icon/General/${clothesName}.png`;\r\n        }\r\n        ;\r\n        collectDIY() {\r\n            let DIYArr = _DIYClothes._ins()._getArrByNoProperty(_DIYClothes._ins()._otherPro.icon, \"\");\r\n            const copyArr = Tools._ObjArray.arrCopy(DIYArr);\r\n            Tools._ObjArray.modifyProValue(copyArr, this._property.classify, 'DIY');\r\n            this._addObjectArr(copyArr);\r\n            return copyArr;\r\n        }\r\n        changeAfterMaking() {\r\n            this.collectDIY();\r\n            this.accurateChange(_DIYClothes._ins()._getPitchProperty('part'), _DIYClothes._ins()._pitchName);\r\n        }\r\n        changeClass(classify, partArr, playAni, start) {\r\n            const _classify = _3D._Scene._ins()._Root.getChildByName(classify);\r\n            for (let i = 0; i < _classify.numChildren; i++) {\r\n                const _classifySp = _classify.getChildAt(i);\r\n                _classifySp.active = false;\r\n                for (let j = 0; j < partArr.length; j++) {\r\n                    const obj = partArr[j];\r\n                    if (obj[this._otherPro.part] === _classifySp.name) {\r\n                        _classifySp.active = true;\r\n                        for (let k = 0; k < _classifySp.numChildren; k++) {\r\n                            const cloth = _classifySp.getChildAt(k);\r\n                            if (cloth.name === obj[this._property.name]) {\r\n                                cloth.active = true;\r\n                                const delay = start ? 40 : 15;\r\n                                if (classify === 'DIY') {\r\n                                    const url = this.getDIYTexBasicUrl(cloth.name);\r\n                                    const fSp = new Laya.Sprite;\r\n                                    fSp.visible = false;\r\n                                    Laya.stage.addChild(fSp);\r\n                                    fSp.zOrder = 1000;\r\n                                    fSp.size(512, 512);\r\n                                    fSp.scale(1, -1);\r\n                                    fSp.pos(0, 512);\r\n                                    const FImg = new Laya.Image;\r\n                                    FImg.skin = url;\r\n                                    fSp.addChild(FImg);\r\n                                    FImg.size(512, 512);\r\n                                    FImg.pos(0, 0);\r\n                                    const ftexData = StorageAdmin._array(`${cloth.name}/${_DIYClothes._ins()._otherPro.texF}`).value;\r\n                                    for (let index = 0; index < ftexData.length; index++) {\r\n                                        const data = ftexData[index];\r\n                                        const Img = new Laya.Image;\r\n                                        fSp.addChild(Img);\r\n                                        Img.skin = `Game/UI/MakePattern/Pattern/general/${data['name']}.png`;\r\n                                        Img.x = data['x'];\r\n                                        Img.y = data['y'];\r\n                                        Img.anchorX = data['anchorX'];\r\n                                        Img.anchorY = data['anchorY'];\r\n                                        Img.width = data['width'];\r\n                                        Img.height = data['height'];\r\n                                        Img.height = data['height'];\r\n                                        Img.rotation = data['rotation'];\r\n                                        Img.zOrder = data['zOrder'];\r\n                                    }\r\n                                    const front = cloth.getChildByName(`${cloth.name}_0`);\r\n                                    const matF = front.skinnedMeshRenderer.material;\r\n                                    TimerAdmin._frameOnce(delay, this, () => {\r\n                                        matF.albedoTexture && matF.albedoTexture.destroy();\r\n                                        matF.albedoTexture = fSp.drawToTexture(fSp.width, fSp.height, fSp.x, fSp.y + fSp.height);\r\n                                        fSp.removeSelf();\r\n                                    });\r\n                                    const rSp = new Laya.Sprite;\r\n                                    rSp.visible = false;\r\n                                    Laya.stage.addChild(rSp);\r\n                                    rSp.zOrder = 1000;\r\n                                    rSp.size(512, 512);\r\n                                    rSp.scale(1, -1);\r\n                                    const RImg = new Laya.Image;\r\n                                    RImg.skin = url;\r\n                                    rSp.addChild(RImg);\r\n                                    RImg.size(512, 512);\r\n                                    rSp.pos(512, 0);\r\n                                    const rtexData = StorageAdmin._array(`${cloth.name}/${_DIYClothes._ins()._otherPro.texR}`).value;\r\n                                    for (let index = 0; index < rtexData.length; index++) {\r\n                                        const data = rtexData[index];\r\n                                        const Img = new Laya.Image;\r\n                                        rSp.addChild(Img);\r\n                                        Img.skin = `Game/UI/MakePattern/Pattern/general/${data['name']}.png`;\r\n                                        Img.x = data['x'];\r\n                                        Img.y = data['y'];\r\n                                        Img.anchorX = data['anchorX'];\r\n                                        Img.anchorY = data['anchorY'];\r\n                                        Img.width = data['width'];\r\n                                        Img.height = data['height'];\r\n                                        Img.height = data['height'];\r\n                                        Img.rotation = data['rotation'];\r\n                                        Img.zOrder = data['zOrder'];\r\n                                    }\r\n                                    const reverse = cloth.getChildByName(`${cloth.name}_1`);\r\n                                    const matR = reverse.skinnedMeshRenderer.material;\r\n                                    TimerAdmin._frameOnce(delay, this, () => {\r\n                                        matR.albedoTexture && matR.albedoTexture.destroy();\r\n                                        matR.albedoTexture = rSp.drawToTexture(rSp.width, rSp.height, rSp.x, rSp.y + rSp.height);\r\n                                        rSp.removeSelf();\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                cloth.active = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            playAni && _3D._Scene._ins().playDispalyAni();\r\n        }\r\n        changeClothStart() {\r\n            this.collectDIY();\r\n            const arr = this._getArrByProperty(this._otherPro.putOn, true);\r\n            this.changeClass(this._classify.DIY, arr, false, true);\r\n            this.changeClass(this._classify.General, arr, false, true);\r\n            this.startSpecialSet();\r\n        }\r\n        changeCloth() {\r\n            const arr = this._getArrByProperty(this._otherPro.putOn, true);\r\n            this.changeClass(this._classify.DIY, arr, true);\r\n            this.changeClass(this._classify.General, arr, true);\r\n        }\r\n        startSpecialSet() {\r\n            if (StorageAdmin._bool('DressState').value) {\r\n                _3D._Scene._ins()._GBottoms.active = _3D._Scene._ins()._GTop.active = _3D._Scene._ins()._DBottoms.active = _3D._Scene._ins()._DTop.active = false;\r\n            }\r\n            else {\r\n                _3D._Scene._ins()._GDress.active = _3D._Scene._ins()._DDress.active = false;\r\n            }\r\n        }\r\n        specialSet(part) {\r\n            if (part === this._part.Dress) {\r\n                StorageAdmin._bool('DressState').value = true;\r\n            }\r\n            else if (part === this._part.Top || part === this._part.Bottoms) {\r\n                StorageAdmin._bool('DressState').value = false;\r\n            }\r\n            if (StorageAdmin._bool('DressState').value) {\r\n                _3D._Scene._ins().displayDress();\r\n            }\r\n            else {\r\n                _3D._Scene._ins().displayTopAndBotton();\r\n            }\r\n        }\r\n        accurateChange(partValue, name) {\r\n            const arr = _AllClothes._ins()._getArrByProperty('part', partValue);\r\n            for (let index = 0; index < arr.length; index++) {\r\n                const element = arr[index];\r\n                if (name === element['name']) {\r\n                    element['putOn'] = true;\r\n                }\r\n                else {\r\n                    element['putOn'] = false;\r\n                }\r\n            }\r\n            _DIYClothes._ins()._setProperty(_DIYClothes._ins()._pitchName, 'putOn', true);\r\n            _AllClothes._ins().changeCloth();\r\n            _AllClothes._ins().specialSet(partValue);\r\n            _AllClothes._ins()._refreshAndStorage();\r\n        }\r\n    }\r\n    _GameData._AllClothes = _AllClothes;\r\n    class _DIYClothes extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._classify = {\r\n                Dress: 'Dress',\r\n                Top: 'Top',\r\n                Bottoms: 'Bottoms',\r\n                ads: 'ads',\r\n            };\r\n            this._otherPro = {\r\n                color: 'color',\r\n                icon: 'icon',\r\n                diffX: 'diffX',\r\n                diffY: 'diffY',\r\n                texR: 'texR',\r\n                texF: 'texF',\r\n            };\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _DIYClothes('DIYClothes', _Res._list.json.DIYClothes.dataArr, true);\r\n            }\r\n            return this.ins;\r\n        }\r\n        ;\r\n        getPitchTexBasicUrl() {\r\n            return `https://h5.tomatojoy.cn/res/ark/3d04671eec61b1e12a6c02e54c1e7320/1.0.0/3DDressUp/DIYTexbasic/${this._pitchName.substr(0, this._pitchName.length - 5)}basic.png`;\r\n        }\r\n        getDIYCutIcon(name) {\r\n            return `https://h5.tomatojoy.cn/res/ark/3d04671eec61b1e12a6c02e54c1e7320/1.0.0/3DDressUp/Icon/DIY/${name.substr(0, name.length - 5)}cut.png`;\r\n        }\r\n        getColor() {\r\n            let obj = this._getPitchObj();\r\n            return [obj[`${this._otherPro.color}1`], obj[`${this._otherPro.color}2`]];\r\n        }\r\n        getClothesArr() {\r\n            if (!this.ClothesArr) {\r\n                this.ClothesArr = [];\r\n                const dataArr = _DIYClothes._ins()._arr;\r\n                for (let index = 0; index < dataArr.length; index++) {\r\n                    if (`${dataArr[index]['name']}` !== 'ads') {\r\n                        let CloBox = this.createClothes(`${dataArr[index]['name']}`);\r\n                        this.ClothesArr.push(CloBox);\r\n                    }\r\n                    else {\r\n                    }\r\n                }\r\n            }\r\n            return this.ClothesArr;\r\n        }\r\n        createClothes(name, Scene) {\r\n            const Cloth = Tools._Node.createPrefab(_Res._list.prefab2D[name]['prefab']);\r\n            const CloBox = new Laya.Sprite;\r\n            CloBox.width = Laya.stage.width;\r\n            CloBox.height = Laya.stage.height;\r\n            CloBox.pivotX = CloBox.width / 2;\r\n            CloBox.pivotY = CloBox.height / 2;\r\n            CloBox.x = Laya.stage.width / 2;\r\n            CloBox.y = Laya.stage.height / 2;\r\n            CloBox.addChild(Cloth);\r\n            CloBox.name = name;\r\n            if (Scene) {\r\n                Scene.addChild(CloBox);\r\n                CloBox.zOrder = 20;\r\n            }\r\n            return CloBox;\r\n        }\r\n    }\r\n    _GameData._DIYClothes = _DIYClothes;\r\n    class _Ranking extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._otherPro = {\r\n                rankNum: 'rankNum',\r\n                fansNum: 'fansNum',\r\n                iconSkin: 'iconSkin',\r\n            };\r\n            this._classify = {\r\n                other: 'other',\r\n                self: 'self',\r\n            };\r\n        }\r\n        static _ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _Ranking('RankingData', _Res._list.json.Ranking.dataArr, true);\r\n                if (!this.ins._arr[0]['iconSkin']) {\r\n                    for (let index = 0; index < this.ins._arr.length; index++) {\r\n                        const element = this.ins._arr[index];\r\n                        element['iconSkin'] = `Game/UI/Ranking/IconSkin/avatar_${element[this.ins._property.index]}.png`;\r\n                    }\r\n                }\r\n                this.ins._pitchName = '玩家';\r\n                this.ins._sortByProperty(this.ins._otherPro.fansNum, this.ins._otherPro.rankNum);\r\n            }\r\n            return this.ins;\r\n        }\r\n    }\r\n    _GameData._Ranking = _Ranking;\r\n})(_GameData || (_GameData = {}));\r\n",
  "references": [
    "D:/Game/project/3DDressUp/Copy/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/Lwg.ts",
    "D:/Game/project/3DDressUp/Copy/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/_3D.ts",
    "D:/Game/project/3DDressUp/Copy/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/_Res.ts"
  ]
}
